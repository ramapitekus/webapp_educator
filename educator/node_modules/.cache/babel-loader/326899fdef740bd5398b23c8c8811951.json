{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext } from './PortalHost';\nimport { Provider as SettingsProvider, Consumer as SettingsConsumer } from '../../core/settings';\nimport { ThemeProvider, withTheme } from '../../core/theming';\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nclass Portal extends React.Component {\n  // @component ./PortalHost.tsx\n  render() {\n    const {\n      children,\n      theme\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SettingsConsumer, null, settings => /*#__PURE__*/React.createElement(PortalContext.Consumer, null, manager => /*#__PURE__*/React.createElement(PortalConsumer, {\n      manager: manager\n    }, /*#__PURE__*/React.createElement(SettingsProvider, {\n      value: settings\n    }, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme\n    }, children)))));\n  }\n\n}\n\n_defineProperty(Portal, \"Host\", PortalHost);\n\nexport default withTheme(Portal);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,IAAqBC,aAArB,QAAyD,cAAzD;AACA,SACEC,QAAQ,IAAIC,gBADd,EAEEC,QAAQ,IAAIC,gBAFd,QAGO,qBAHP;AAIA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,oBAAzC;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAA4C;AAC1C;AAGAC,QAAM,GAAG;AACP,UAAM;AAAEC,cAAF;AAAYC;AAAZ,QAAsB,KAAKC,KAAjC;AAEA,wBACEf,oBAACO,gBAAD,QACIS,QAAD,iBACChB,oBAACG,aAAD,CAAeG,QAAf,QACIW,OAAD,iBACCjB,oBAACC,cAAD;AAAgBgB,aAAO,EAAEA;AAAzB,oBACEjB,oBAACK,gBAAD;AAAkBa,WAAK,EAAEF;AAAzB,oBACEhB,oBAACQ,aAAD;AAAeM,WAAK,EAAEA;AAAtB,OAA8BD,QAA9B,CADF,CADF,CAFJ,CAFJ,CADF;AAeD;;AAtByC;;gBAAtCH,Q,QAEUR;;AAuBhB,eAAeO,SAAS,CAACC,MAAD,CAAxB","names":["React","PortalConsumer","PortalHost","PortalContext","Provider","SettingsProvider","Consumer","SettingsConsumer","ThemeProvider","withTheme","Portal","Component","render","children","theme","props","settings","manager","value"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\Portal\\Portal.tsx"],"sourcesContent":["import * as React from 'react';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext, PortalMethods } from './PortalHost';\nimport {\n  Provider as SettingsProvider,\n  Consumer as SettingsConsumer,\n} from '../../core/settings';\nimport { ThemeProvider, withTheme } from '../../core/theming';\n\ntype Props = {\n  /**\n   * Content of the `Portal`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Portal extends React.Component<Props> {\n  // @component ./PortalHost.tsx\n  static Host = PortalHost;\n\n  render() {\n    const { children, theme } = this.props;\n\n    return (\n      <SettingsConsumer>\n        {(settings) => (\n          <PortalContext.Consumer>\n            {(manager) => (\n              <PortalConsumer manager={manager as PortalMethods}>\n                <SettingsProvider value={settings}>\n                  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n                </SettingsProvider>\n              </PortalConsumer>\n            )}\n          </PortalContext.Consumer>\n        )}\n      </SettingsConsumer>\n    );\n  }\n}\n\nexport default withTheme(Portal);\n"]},"metadata":{},"sourceType":"module"}