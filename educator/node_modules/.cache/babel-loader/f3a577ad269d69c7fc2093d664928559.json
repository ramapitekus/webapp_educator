{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleSheet } from 'react-native';\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\nconst StyledText = _ref => {\n  let {\n    theme,\n    alpha,\n    family,\n    style,\n    ...rest\n  } = _ref;\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n  return /*#__PURE__*/React.createElement(Text, _extends({}, rest, {\n    style: [styles.text, {\n      color: textColor,\n      ...font,\n      writingDirection\n    }, style]\n  }));\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default withTheme(StyledText);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAA4CC,UAA5C,QAA8D,cAA9D;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AASA,MAAMC,UAAU,GAAG,QAAqD;AAAA,MAApD;AAAEC,SAAF;AAASC,SAAT;AAAgBC,UAAhB;AAAwBC,SAAxB;AAA+B,OAAGC;AAAlC,GAAoD;AACtE,QAAMC,SAAS,GAAGZ,KAAK,CAACO,KAAK,CAACM,MAANN,CAAaO,IAAd,CAALd,CAAyBQ,KAAzBR,CAA+BQ,KAA/BR,EAAsCe,GAAtCf,GAA4CgB,MAA5ChB,EAAlB;AACA,QAAMiB,IAAI,GAAGV,KAAK,CAACW,KAANX,CAAYE,MAAZF,CAAb;AACA,QAAMY,gBAAgB,GAAGjB,WAAW,CAACkB,KAAZlB,GAAoB,KAApBA,GAA4B,KAArD;AAEA,sBACED,oBAACG,IAAD,eACMO,IADN;AAEED,SAAK,EAAE,CACLW,MAAM,CAACP,IADF,EAEL;AAAEd,WAAK,EAAEY,SAAT;AAAoB,SAAGK,IAAvB;AAA6BE;AAA7B,KAFK,EAGLT,KAHK;AAFT,KADF;AALF;;AAiBA,MAAMW,MAAM,GAAGlB,UAAU,CAACmB,MAAXnB,CAAkB;AAC/BW,MAAI,EAAE;AACJS,aAAS,EAAE;AADP;AADyB,CAAlBpB,CAAf;AAMA,eAAeE,SAAS,CAACC,UAAD,CAAxB","names":["color","React","I18nManager","StyleSheet","Text","withTheme","StyledText","theme","alpha","family","style","rest","textColor","colors","text","rgb","string","font","fonts","writingDirection","isRTL","styles","create","textAlign"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\Typography\\StyledText.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle, StyleSheet } from 'react-native';\n\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme: ReactNativePaper.Theme;\n};\n\nconst StyledText = ({ theme, alpha, family, style, ...rest }: Props) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        styles.text,\n        { color: textColor, ...font, writingDirection },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(StyledText);\n"]},"metadata":{},"sourceType":"module"}