{"ast":null,"code":"import * as Colors from './colors';\nimport { Animated } from 'react-native';\nconst SHADOW_COLOR = Colors.black;\nconst SHADOW_OPACITY = 0.24;\nexport default function shadow() {\n  let elevation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  if (elevation instanceof Animated.Value) {\n    const inputRange = [0, 1, 2, 3, 8, 24];\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: new Animated.Value(0),\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: [0, 0.5, 0.75, 2, 7, 23]\n        })\n      },\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, SHADOW_OPACITY],\n        extrapolate: 'clamp'\n      }),\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: [0, 0.75, 1.5, 3, 8, 24]\n      })\n    };\n  } else {\n    if (elevation === 0) {\n      return {};\n    }\n\n    let height, radius;\n\n    switch (elevation) {\n      case 1:\n        height = 0.5;\n        radius = 0.75;\n        break;\n\n      case 2:\n        height = 0.75;\n        radius = 1.5;\n        break;\n\n      default:\n        height = elevation - 1;\n        radius = elevation;\n    }\n\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: 0,\n        height\n      },\n      shadowOpacity: SHADOW_OPACITY,\n      shadowRadius: radius\n    };\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,UAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAACG,KAA5B;AACA,MAAMC,cAAc,GAAG,IAAvB;AAEA,eAAe,SAASC,MAAT,GAAwD;AAAA,MAAxCC,SAAwC,uEAAH,CAAG;;AACrE,MAAIA,SAAS,YAAYL,QAAQ,CAACM,KAAlC,EAAyC;AACvC,UAAMC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,CAAnB;AAEA,WAAO;AACLC,iBAAW,EAAEP,YADR;AAELQ,kBAAY,EAAE;AACZC,aAAK,EAAE,IAAIV,QAAQ,CAACM,KAAb,CAAmB,CAAnB,CADK;AAEZK,cAAM,EAAEN,SAAS,CAACO,WAAVP,CAAsB;AAC5BE,oBAD4B;AAE5BM,qBAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB;AAFe,SAAtBR;AAFI,OAFT;AASLS,mBAAa,EAAET,SAAS,CAACO,WAAVP,CAAsB;AACnCE,kBAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADuB;AAEnCM,mBAAW,EAAE,CAAC,CAAD,EAAIV,cAAJ,CAFsB;AAGnCY,mBAAW,EAAE;AAHsB,OAAtBV,CATV;AAcLW,kBAAY,EAAEX,SAAS,CAACO,WAAVP,CAAsB;AAClCE,kBADkC;AAElCM,mBAAW,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB;AAFqB,OAAtBR;AAdT,KAAP;AAHF,SAsBO;AACL,QAAIA,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAO,EAAP;AACD;;AAED,QAAIM,MAAJ,EAAYM,MAAZ;;AACA,YAAQZ,SAAR;AACE,WAAK,CAAL;AACEM,cAAM,GAAG,GAATA;AACAM,cAAM,GAAG,IAATA;AACA;;AACF,WAAK,CAAL;AACEN,cAAM,GAAG,IAATA;AACAM,cAAM,GAAG,GAATA;AACA;;AACF;AACEN,cAAM,GAAGN,SAAS,GAAG,CAArBM;AACAM,cAAM,GAAGZ,SAATY;AAXJ;;AAcA,WAAO;AACLT,iBAAW,EAAEP,YADR;AAELQ,kBAAY,EAAE;AACZC,aAAK,EAAE,CADK;AAEZC;AAFY,OAFT;AAMLG,mBAAa,EAAEX,cANV;AAOLa,kBAAY,EAAEC;AAPT,KAAP;AASD;AACF","names":["Colors","Animated","SHADOW_COLOR","black","SHADOW_OPACITY","shadow","elevation","Value","inputRange","shadowColor","shadowOffset","width","height","interpolate","outputRange","shadowOpacity","extrapolate","shadowRadius","radius"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\styles\\shadow.tsx"],"sourcesContent":["import * as Colors from './colors';\nimport { Animated } from 'react-native';\n\nconst SHADOW_COLOR = Colors.black;\nconst SHADOW_OPACITY = 0.24;\n\nexport default function shadow(elevation: number | Animated.Value = 0) {\n  if (elevation instanceof Animated.Value) {\n    const inputRange = [0, 1, 2, 3, 8, 24];\n\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: new Animated.Value(0),\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: [0, 0.5, 0.75, 2, 7, 23],\n        }),\n      },\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, SHADOW_OPACITY],\n        extrapolate: 'clamp',\n      }),\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: [0, 0.75, 1.5, 3, 8, 24],\n      }),\n    };\n  } else {\n    if (elevation === 0) {\n      return {};\n    }\n\n    let height, radius;\n    switch (elevation) {\n      case 1:\n        height = 0.5;\n        radius = 0.75;\n        break;\n      case 2:\n        height = 0.75;\n        radius = 1.5;\n        break;\n      default:\n        height = elevation - 1;\n        radius = elevation;\n    }\n\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: 0,\n        height,\n      },\n      shadowOpacity: SHADOW_OPACITY,\n      shadowRadius: radius,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}