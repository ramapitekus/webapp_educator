{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.","map":{"version":3,"mappings":"AAAA;AACA","names":[],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ_2\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common\\src\\common\\IAudioSource.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ISpeechConfigAudioDevice } from \"../common.speech/Exports\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat\";\r\nimport { AudioSourceEvent } from \"./AudioSourceEvents\";\r\nimport { EventSource } from \"./EventSource\";\r\nimport { IDetachable } from \"./IDetachable\";\r\nimport { IStreamChunk } from \"./Stream\";\r\n\r\nexport interface IAudioSource {\r\n    id(): string;\r\n    turnOn(): Promise<void>;\r\n    attach(audioNodeId: string): Promise<IAudioStreamNode>;\r\n    detach(audioNodeId: string): void;\r\n    turnOff(): Promise<void>;\r\n    events: EventSource<AudioSourceEvent>;\r\n    format: Promise<AudioStreamFormatImpl>;\r\n    deviceInfo: Promise<ISpeechConfigAudioDevice>;\r\n    blob: Promise<Blob | Buffer>;\r\n    setProperty?(name: string, value: string): void;\r\n    getProperty?(name: string, def?: string): string;\r\n}\r\n\r\nexport interface IAudioStreamNode extends IDetachable {\r\n    id(): string;\r\n    read(): Promise<IStreamChunk<ArrayBuffer>>;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}