{"ast":null,"code":"import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, isEqualIcon } from './Icon';\nimport { withTheme } from '../core/theming';\n\nconst CrossFadeIcon = _ref => {\n  let {\n    color,\n    size,\n    source,\n    theme\n  } = _ref;\n  const [currentIcon, setCurrentIcon] = React.useState(() => source);\n  const [previousIcon, setPreviousIcon] = React.useState(null);\n  const {\n    current: fade\n  } = React.useRef(new Animated.Value(1));\n  const {\n    scale\n  } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n  const opacityPrev = fade;\n  const opacityNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }) : 1;\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg']\n  });\n  const rotateNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  }) : '0deg';\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.content, {\n      height: size,\n      width: size\n    }]\n  }, previousIcon ? /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityPrev,\n      transform: [{\n        rotate: rotatePrev\n      }]\n    }]\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: previousIcon,\n    size: size,\n    color: color\n  })) : null, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityNext,\n      transform: [{\n        rotate: rotateNext\n      }]\n    }]\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: currentIcon,\n    size: size,\n    color: color\n  })));\n};\n\nexport default withTheme(CrossFadeIcon);\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"mappings":"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","names":["React","Animated","StyleSheet","View","Icon","isValidIcon","isEqualIcon","withTheme","CrossFadeIcon","color","size","source","theme","currentIcon","setCurrentIcon","useState","previousIcon","setPreviousIcon","current","fade","useRef","Value","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","style","styles","content","height","width","icon","opacity","transform","rotate","create","alignItems","justifyContent","position","top","left","right","bottom"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\CrossFadeIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, IconSource, isEqualIcon } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}