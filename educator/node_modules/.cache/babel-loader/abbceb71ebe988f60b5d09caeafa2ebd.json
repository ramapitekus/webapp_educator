{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozgur\\\\Documents\\\\VSCodeProjects\\\\webapp_educator\\\\educator\\\\src\\\\components\\\\ExplanationButtons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PlayVideo from \"./explanations/PlayVideo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExplanationButtons = _ref => {\n  _s();\n\n  let {\n    topics\n  } = _ref;\n  // const [ExplanationComponent, setExplanationComponent] = useState(null);\n  const [VideoStr, setVideoStr] = useState(null);\n\n  const handleClick = e => {\n    const val = e.currentTarget.getAttribute(\"expl\");\n    setVideoStr(val);\n  };\n\n  const VideoCallback = () => {\n    setVideoStr(null);\n  };\n\n  var explanationButtons = topics.map(expl => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: expl.colored ? \"button buttonExplanationMentioned\" : \"button buttonExplanation\" //TODO: Add reasonable keys\n    ,\n    onClick: handleClick,\n    expl: expl.name,\n    children: expl.name\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [VideoStr && /*#__PURE__*/_jsxDEV(PlayVideo, {\n      videostr: VideoStr,\n      callback: VideoCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: explanationButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ExplanationButtons, \"CNMFy0N8X9w1PXkymqIF7+M1TDs=\");\n\n_c = ExplanationButtons;\nexport default ExplanationButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExplanationButtons\");","map":{"version":3,"sources":["C:/Users/ozgur/Documents/VSCodeProjects/webapp_educator/educator/src/components/ExplanationButtons.js"],"names":["React","useState","PlayVideo","ExplanationButtons","topics","VideoStr","setVideoStr","handleClick","e","val","currentTarget","getAttribute","VideoCallback","explanationButtons","map","expl","colored","name","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;;AAEA,MAAMC,kBAAkB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACzC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMM,WAAW,GAAIC,CAAD,IAAO;AACzB,UAAMC,GAAG,GAAGD,CAAC,CAACE,aAAF,CAAgBC,YAAhB,CAA6B,MAA7B,CAAZ;AACAL,IAAAA,WAAW,CAACG,GAAD,CAAX;AACD,GAHD;;AAKA,QAAMG,aAAa,GAAG,MAAM;AAC1BN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAIO,kBAAkB,GAAGT,MAAM,CAACU,GAAP,CAAYC,IAAD,iBAClC;AACE,IAAA,SAAS,EACPA,IAAI,CAACC,OAAL,GACI,mCADJ,GAEI,0BAJR,CAME;AANF;AAQE,IAAA,OAAO,EAAET,WARX;AASE,IAAA,IAAI,EAAEQ,IAAI,CAACE,IATb;AAAA,cAWGF,IAAI,CAACE;AAXR,KAOOC,IAAI,CAACC,MAAL,EAPP;AAAA;AAAA;AAAA;AAAA,UADuB,CAAzB;AAgBA,sBACE;AAAA,eACGd,QAAQ,iBAAI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEA,QAArB;AAA+B,MAAA,QAAQ,EAAEO;AAAzC;AAAA;AAAA;AAAA;AAAA,YADf,eAEE;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAnCD;;GAAMV,kB;;KAAAA,kB;AAqCN,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport PlayVideo from \"./explanations/PlayVideo\";\r\n\r\nconst ExplanationButtons = ({ topics }) => {\r\n  // const [ExplanationComponent, setExplanationComponent] = useState(null);\r\n  const [VideoStr, setVideoStr] = useState(null);\r\n\r\n  const handleClick = (e) => {\r\n    const val = e.currentTarget.getAttribute(\"expl\");\r\n    setVideoStr(val);\r\n  };\r\n\r\n  const VideoCallback = () => {\r\n    setVideoStr(null);\r\n  };\r\n\r\n  var explanationButtons = topics.map((expl) => (\r\n    <button\r\n      className={\r\n        expl.colored\r\n          ? \"button buttonExplanationMentioned\"\r\n          : \"button buttonExplanation\"\r\n      }\r\n      //TODO: Add reasonable keys\r\n      key={Math.random()}\r\n      onClick={handleClick}\r\n      expl={expl.name}\r\n    >\r\n      {expl.name}\r\n    </button>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      {VideoStr && <PlayVideo videostr={VideoStr} callback={VideoCallback} />}\r\n      <div>{explanationButtons}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExplanationButtons;\r\n"]},"metadata":{},"sourceType":"module"}