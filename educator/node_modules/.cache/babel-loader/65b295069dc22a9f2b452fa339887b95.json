{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Icon from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\nconst defaultSize = 64;\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\n\nconst Avatar = _ref => {\n  let {\n    icon,\n    size = defaultSize,\n    style,\n    theme,\n    ...rest\n  } = _ref;\n\n  var _rest$color;\n\n  const {\n    backgroundColor = theme.colors.primary,\n    ...restStyle\n  } = StyleSheet.flatten(style) || {};\n  const textColor = (_rest$color = rest.color) !== null && _rest$color !== void 0 ? _rest$color : getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor\n    }, styles.container, restStyle]\n  }, rest), /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    color: textColor,\n    size: size * 0.6\n  }));\n};\n\nAvatar.displayName = 'Avatar.Icon';\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default withTheme(Avatar);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAA0BC,UAA1B,QAAuD,cAAvD;AACA,OAAOC,IAAP,MAAiC,SAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AAEA,MAAMC,WAAW,GAAG,EAApB;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG,QAAgE;AAAA,MAA/D;AAAEC,QAAF;AAAQC,QAAI,GAAGH,WAAf;AAA4BI,SAA5B;AAAmCC,SAAnC;AAA0C,OAAGC;AAA7C,GAA+D;;AAAA;;AAC7E,QAAM;AAAEC,mBAAe,GAAGF,KAAK,CAACG,MAANH,CAAaI,OAAjC;AAA0C,OAAGC;AAA7C,MACJf,UAAU,CAACgB,OAAXhB,CAAmBS,KAAnBT,KAA6B,EAD/B;AAEA,QAAMiB,SAAS,kBACbN,IAAI,CAACO,KADQ,qDAEbd,mBAAmB,CAACQ,eAAD,EAAkBT,KAAlB,EAAyB,oBAAzB,CAFrB;AAIA,sBACEL,oBAACC,IAAD;AACEU,SAAK,EAAE,CACL;AACEU,WAAK,EAAEX,IADT;AAEEY,YAAM,EAAEZ,IAFV;AAGEa,kBAAY,EAAEb,IAAI,GAAG,CAHvB;AAIEI;AAJF,KADK,EAOLU,MAAM,CAACC,SAPF,EAQLR,SARK;AADT,KAWMJ,IAXN,gBAaEb,oBAACG,IAAD;AAAMuB,UAAM,EAAEjB,IAAd;AAAoBW,SAAK,EAAED,SAA3B;AAAsCT,QAAI,EAAEA,IAAI,GAAG;AAAnD,IAbF,CADF;AAPF;;AA0BAF,MAAM,CAACmB,WAAPnB,GAAqB,aAArBA;AAEA,MAAMgB,MAAM,GAAGtB,UAAU,CAAC0B,MAAX1B,CAAkB;AAC/BuB,WAAS,EAAE;AACTI,kBAAc,EAAE,QADP;AAETC,cAAU,EAAE;AAFH;AADoB,CAAlB5B,CAAf;AAOA,eAAeE,SAAS,CAACI,MAAD,CAAxB","names":["React","View","StyleSheet","Icon","withTheme","white","getContrastingColor","defaultSize","Avatar","icon","size","style","theme","rest","backgroundColor","colors","primary","restStyle","flatten","textColor","color","width","height","borderRadius","styles","container","source","displayName","create","justifyContent","alignItems"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\Avatar\\AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Icon, { IconSource } from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(Avatar);\n"]},"metadata":{},"sourceType":"module"}