{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olesr\\\\OneDrive\\\\Documents\\\\webapp_educ\\\\educator\\\\src\\\\About.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  var audio = document.querySelector(\"audio\");\n  var constraints = window.constraints = {\n    audio: true,\n    video: false\n  };\n\n  function rec() {\n    navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorder.start();\n      let chunks = [];\n\n      mediaRecorder.ondataavailable = function (e) {\n        chunks.push(e.data);\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"About Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => rec()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) //<button onClick={()=> {rec()}}>Record</button>)\n  ;\n};\n\n_c = About;\nexport default About;\n\nif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n  console.log(\"getUserMedia supported.\");\n  navigator.mediaDevices.getUserMedia( // constraints - only audio needed for this app\n  {\n    audio: true\n  }) // Success callback\n  .then(function (stream) {}) // Error callback\n  .catch(function (err) {\n    console.log(\"The following getUserMedia error occurred: \" + err);\n  });\n} else {\n  console.log(\"getUserMedia not supported on your browser!\");\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["C:/Users/olesr/OneDrive/Documents/webapp_educ/educator/src/About.js"],"names":["About","audio","document","querySelector","constraints","window","video","rec","navigator","mediaDevices","getUserMedia","then","stream","mediaRecorder","MediaRecorder","start","chunks","ondataavailable","e","push","data","console","log","catch","err"],"mappings":";;;;AAAA,MAAMA,KAAK,GAAG,MAAM;AAClB,MAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AACA,MAAIC,WAAW,GAAIC,MAAM,CAACD,WAAP,GAAqB;AACtCH,IAAAA,KAAK,EAAE,IAD+B;AAEtCK,IAAAA,KAAK,EAAE;AAF+B,GAAxC;;AAKA,WAASC,GAAT,GAAe;AACbC,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCN,WAApC,EAAiDO,IAAjD,CAAsD,UAAUC,MAAV,EAAkB;AACtE,YAAMC,aAAa,GAAG,IAAIC,aAAJ,CAAkBF,MAAlB,CAAtB;AACAC,MAAAA,aAAa,CAACE,KAAd;AAEA,UAAIC,MAAM,GAAG,EAAb;;AAEAH,MAAAA,aAAa,CAACI,eAAd,GAAgC,UAAUC,CAAV,EAAa;AAC3CF,QAAAA,MAAM,CAACG,IAAP,CAAYD,CAAC,CAACE,IAAd;AACD,OAFD;AAGD,KATD;AAUD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMb,GAAG;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF,CAKE;AALF;AAOD,CA3BD;;KAAMP,K;AA6BN,eAAeA,KAAf;;AAEA,IAAIQ,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,YAArD,EAAmE;AACjEW,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAd,EAAAA,SAAS,CAACC,YAAV,CACGC,YADH,EAEI;AACA;AACET,IAAAA,KAAK,EAAE;AADT,GAHJ,EAQE;AARF,GASGU,IATH,CASQ,UAAUC,MAAV,EAAkB,CAAE,CAT5B,EAWE;AAXF,GAYGW,KAZH,CAYS,UAAUC,GAAV,EAAe;AACpBH,IAAAA,OAAO,CAACC,GAAR,CAAY,gDAAgDE,GAA5D;AACD,GAdH;AAeD,CAjBD,MAiBO;AACLH,EAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACD","sourcesContent":["const About = () => {\r\n  var audio = document.querySelector(\"audio\");\r\n  var constraints = (window.constraints = {\r\n    audio: true,\r\n    video: false,\r\n  });\r\n\r\n  function rec() {\r\n    navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      mediaRecorder.start();\r\n\r\n      let chunks = [];\r\n\r\n      mediaRecorder.ondataavailable = function (e) {\r\n        chunks.push(e.data);\r\n      };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>About Page</h1>\r\n      <button onClick={() => rec()}></button>\r\n    </>\r\n    //<button onClick={()=> {rec()}}>Record</button>)\r\n  );\r\n};\r\n\r\nexport default About;\r\n\r\nif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n  console.log(\"getUserMedia supported.\");\r\n  navigator.mediaDevices\r\n    .getUserMedia(\r\n      // constraints - only audio needed for this app\r\n      {\r\n        audio: true,\r\n      }\r\n    )\r\n\r\n    // Success callback\r\n    .then(function (stream) {})\r\n\r\n    // Error callback\r\n    .catch(function (err) {\r\n      console.log(\"The following getUserMedia error occurred: \" + err);\r\n    });\r\n} else {\r\n  console.log(\"getUserMedia not supported on your browser!\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}