{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { StyleSheet, View, Image } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\n/**\n * A component to show a cover image inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-cover.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://reactnative.dev/docs/image#props\n */\n\nconst CardCover = _ref => {\n  let {\n    index,\n    total,\n    style,\n    theme,\n    ...rest\n  } = _ref;\n  const {\n    roundness\n  } = theme;\n  let coverStyle;\n\n  if (index === 0) {\n    if (total === 1) {\n      coverStyle = {\n        borderRadius: roundness\n      };\n    } else {\n      coverStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness\n      };\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    coverStyle = {\n      borderBottomLeftRadius: roundness\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, coverStyle, style]\n  }, /*#__PURE__*/React.createElement(Image, _extends({}, rest, {\n    style: [styles.image, coverStyle]\n  })));\n};\n\nCardCover.displayName = 'Card.Cover';\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end'\n  }\n});\nexport default withTheme(CardCover); // @component-docs ignore-next-line\n\nexport { CardCover };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAAsCC,KAAtC,QAA8D,cAA9D;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,QAAoD;AAAA,MAAnD;AAAEC,SAAF;AAASC,SAAT;AAAgBC,SAAhB;AAAuBC,SAAvB;AAA8B,OAAGC;AAAjC,GAAmD;AACpE,QAAM;AAAEC;AAAF,MAAgBF,KAAtB;AAEA,MAAIG,UAAJ;;AAEA,MAAIN,KAAK,KAAK,CAAd,EAAiB;AACf,QAAIC,KAAK,KAAK,CAAd,EAAiB;AACfK,gBAAU,GAAG;AACXC,oBAAY,EAAEF;AADH,OAAbC;AADF,WAIO;AACLA,gBAAU,GAAG;AACXE,2BAAmB,EAAEH,SADV;AAEXI,4BAAoB,EAAEJ;AAFX,OAAbC;AAID;AAVH,SAWO,IAAI,OAAOL,KAAP,KAAiB,QAAjB,IAA6BD,KAAK,KAAKC,KAAK,GAAG,CAAnD,EAAsD;AAC3DK,cAAU,GAAG;AACXI,4BAAsB,EAAEL;AADb,KAAbC;AAGD;;AAED,sBACEb,oBAACE,IAAD;AAAMO,SAAK,EAAE,CAACS,MAAM,CAACC,SAAR,EAAmBN,UAAnB,EAA+BJ,KAA/B;AAAb,kBACET,oBAACG,KAAD,eAAWQ,IAAX;AAAiBF,SAAK,EAAE,CAACS,MAAM,CAACE,KAAR,EAAeP,UAAf;AAAxB,KADF,CADF;AAtBF;;AA6BAP,SAAS,CAACe,WAAVf,GAAwB,YAAxBA;AACA,MAAMY,MAAM,GAAGjB,UAAU,CAACqB,MAAXrB,CAAkB;AAC/BkB,WAAS,EAAE;AACTI,UAAM,EAAE,GADC;AAETC,mBAAe,EAAEnB,OAFR;AAGToB,YAAQ,EAAE;AAHD,GADoB;AAM/BL,OAAK,EAAE;AACLM,QAAI,EAAE,CADD;AAELH,UAAM,EAAEI,SAFH;AAGLC,SAAK,EAAED,SAHF;AAILE,WAAO,EAAE,EAJJ;AAKLC,kBAAc,EAAE;AALX;AANwB,CAAlB7B,CAAf;AAeA,eAAeG,SAAS,CAACE,SAAD,CAAxB,C,CAEA;;AACA,SAASA,SAAT","names":["React","StyleSheet","View","Image","withTheme","grey200","CardCover","index","total","style","theme","rest","roundness","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","styles","container","image","displayName","create","height","backgroundColor","overflow","flex","undefined","width","padding","justifyContent"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\Card\\CardCover.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Image, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\n\ntype Props = React.ComponentPropsWithRef<typeof Image> & {\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-cover.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://reactnative.dev/docs/image#props\n */\nconst CardCover = ({ index, total, style, theme, ...rest }: Props) => {\n  const { roundness } = theme;\n\n  let coverStyle;\n\n  if (index === 0) {\n    if (total === 1) {\n      coverStyle = {\n        borderRadius: roundness,\n      };\n    } else {\n      coverStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness,\n      };\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    coverStyle = {\n      borderBottomLeftRadius: roundness,\n    };\n  }\n\n  return (\n    <View style={[styles.container, coverStyle, style]}>\n      <Image {...rest} style={[styles.image, coverStyle]} />\n    </View>\n  );\n};\n\nCardCover.displayName = 'Card.Cover';\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default withTheme(CardCover);\n\n// @component-docs ignore-next-line\nexport { CardCover };\n"]},"metadata":{},"sourceType":"module"}