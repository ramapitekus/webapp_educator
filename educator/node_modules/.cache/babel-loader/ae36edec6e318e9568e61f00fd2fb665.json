{"ast":null,"code":"export const handlePress = _ref => {\n  let {\n    onPress,\n    value,\n    onValueChange\n  } = _ref;\n\n  if (onPress && onValueChange) {\n    console.warn(`onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`);\n  }\n\n  onValueChange ? onValueChange(value) : onPress === null || onPress === void 0 ? void 0 : onPress();\n};\nexport const isChecked = _ref2 => {\n  let {\n    value,\n    status,\n    contextValue\n  } = _ref2;\n\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};","map":{"version":3,"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,QAQrB;AAAA,MARsB;AAC1BC,WAD0B;AAE1BC,SAF0B;AAG1BC;AAH0B,GAQtB;;AACJ,MAAIF,OAAO,IAAIE,aAAf,EAA8B;AAC5BC,WAAO,CAACC,IAARD,CACG,0FADHA;AAGD;;AAEDD,eAAa,GAAGA,aAAa,CAACD,KAAD,CAAhB,GAA0BD,OAA1B,SAA0BA,WAA1B,WAA0BA,GAA1B,MAA0BA,UAAO,EAA9CE;AAfK;AAkBP,OAAO,MAAMG,SAAS,GAAG,SAQnB;AAAA,MARoB;AACxBJ,SADwB;AAExBK,UAFwB;AAGxBC;AAHwB,GAQpB;;AACJ,MAAIA,YAAY,KAAKC,SAAjBD,IAA8BA,YAAY,KAAK,IAAnD,EAAyD;AACvD,WAAOA,YAAY,KAAKN,KAAjBM,GAAyB,SAAzBA,GAAqC,WAA5C;AADF,SAEO;AACL,WAAOD,MAAP;AACD;AAbI","names":["handlePress","onPress","value","onValueChange","console","warn","isChecked","status","contextValue","undefined"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\RadioButton\\utils.ts"],"sourcesContent":["export const handlePress = ({\n  onPress,\n  value,\n  onValueChange,\n}: {\n  onPress?: () => void;\n  value: string;\n  onValueChange?: (value: string) => void;\n}) => {\n  if (onPress && onValueChange) {\n    console.warn(\n      `onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`\n    );\n  }\n\n  onValueChange ? onValueChange(value) : onPress?.();\n};\n\nexport const isChecked = ({\n  value,\n  status,\n  contextValue,\n}: {\n  value: string;\n  status?: 'checked' | 'unchecked';\n  contextValue?: string;\n}) => {\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}