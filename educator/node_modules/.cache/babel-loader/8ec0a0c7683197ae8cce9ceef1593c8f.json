{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { StyleSheet, View, SafeAreaView } from 'react-native';\nimport overlay from '../../styles/overlay';\nimport { DEFAULT_APPBAR_HEIGHT, Appbar } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" subtitle=\"Subtitle\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst AppbarHeader = props => {\n  const {\n    // Don't use default props since we check it to know whether we should use SafeAreaView\n    statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n    style,\n    dark,\n    ...rest\n  } = props;\n  const {\n    dark: isDarkTheme,\n    colors,\n    mode\n  } = rest.theme;\n  const {\n    height = DEFAULT_APPBAR_HEIGHT,\n    elevation = 4,\n    backgroundColor: customBackground,\n    zIndex = 0,\n    ...restStyle\n  } = StyleSheet.flatten(style) || {};\n  const backgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary; // Let the user override the behaviour\n\n  const Wrapper = typeof props.statusBarHeight === 'number' ? View : SafeAreaView;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    style: [{\n      backgroundColor,\n      zIndex,\n      elevation\n    }, shadow(elevation)]\n  }, /*#__PURE__*/React.createElement(Appbar, _extends({\n    style: [{\n      height,\n      backgroundColor,\n      marginTop: statusBarHeight\n    }, styles.appbar, restStyle],\n    dark: dark\n  }, rest)));\n};\n\nAppbarHeader.displayName = 'Appbar.Header';\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0\n  }\n});\nexport default withTheme(AppbarHeader); // @component-docs ignore-next-line\n\nconst AppbarHeaderWithTheme = withTheme(AppbarHeader); // @component-docs ignore-next-line\n\nexport { AppbarHeaderWithTheme as AppbarHeader };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,UADF,EAGEC,IAHF,EAIEC,YAJF,QAMO,cANP;AAOA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,qBAAT,EAAgCC,MAAhC,QAA8C,UAA9C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAkB;AACrC,QAAM;AACJ;AACAC,mBAAe,GAAGH,uBAFd;AAGJI,SAHI;AAIJC,QAJI;AAKJ,OAAGC;AALC,MAMFJ,KANJ;AAQA,QAAM;AAAEG,QAAI,EAAEE,WAAR;AAAqBC,UAArB;AAA6BC;AAA7B,MAAsCH,IAAI,CAACI,KAAjD;AACA,QAAM;AACJC,UAAM,GAAGf,qBADL;AAEJgB,aAAS,GAAG,CAFR;AAGJC,mBAAe,EAAEC,gBAHb;AAIJC,UAAM,GAAG,CAJL;AAKJ,OAAGC;AALC,MAMSxB,UAAU,CAACyB,OAAXzB,CAAmBY,KAAnBZ,KAA6B,EAN5C;AAOA,QAAMqB,eAAe,GAAGC,gBAAgB,GACpCA,gBADoC,GAEpCP,WAAW,IAAIE,IAAI,KAAK,UAAxBF,GACAZ,OAAO,CAACiB,SAAD,EAAYJ,MAAM,CAACU,OAAnB,CADPX,GAEAC,MAAM,CAACW,OAJX,CAjBqC,CAsBrC;;AACA,QAAMC,OAAO,GACX,OAAOlB,KAAK,CAACC,eAAb,KAAiC,QAAjC,GAA4CV,IAA5C,GAAmDC,YADrD;AAEA,sBACEH,oBAAC6B,OAAD;AACEhB,SAAK,EACH,CACE;AAAES,qBAAF;AAAmBE,YAAnB;AAA2BH;AAA3B,KADF,EAEEd,MAAM,CAACc,SAAD,CAFR;AAFJ,kBAQErB,oBAACM,MAAD;AACEO,SAAK,EAAE,CACL;AAAEO,YAAF;AAAUE,qBAAV;AAA2BQ,eAAS,EAAElB;AAAtC,KADK,EAELmB,MAAM,CAACC,MAFF,EAGLP,SAHK,CADT;AAMEX,QAAI,EAAEA;AANR,KAOMC,IAPN,EARF,CADF;AAzBF;;AA+CAL,YAAY,CAACuB,WAAbvB,GAA2B,eAA3BA;AAEA,MAAMqB,MAAM,GAAG9B,UAAU,CAACiC,MAAXjC,CAAkB;AAC/B+B,QAAM,EAAE;AACNX,aAAS,EAAE;AADL;AADuB,CAAlBpB,CAAf;AAMA,eAAeO,SAAS,CAACE,YAAD,CAAxB,C,CAEA;;AACA,MAAMyB,qBAAqB,GAAG3B,SAAS,CAACE,YAAD,CAAvC,C,CACA;;AACA,SAASyB,qBAAqB,IAAIzB,YAAlC","names":["React","StyleSheet","View","SafeAreaView","overlay","DEFAULT_APPBAR_HEIGHT","Appbar","shadow","withTheme","APPROX_STATUSBAR_HEIGHT","AppbarHeader","props","statusBarHeight","style","dark","rest","isDarkTheme","colors","mode","theme","height","elevation","backgroundColor","customBackground","zIndex","restStyle","flatten","surface","primary","Wrapper","marginTop","styles","appbar","displayName","create","AppbarHeaderWithTheme"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\Appbar\\AppbarHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n} from 'react-native';\nimport overlay from '../../styles/overlay';\nimport { DEFAULT_APPBAR_HEIGHT, Appbar } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" subtitle=\"Subtitle\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarHeader = (props: Props) => {\n  const {\n    // Don't use default props since we check it to know whether we should use SafeAreaView\n    statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n    style,\n    dark,\n    ...rest\n  } = props;\n\n  const { dark: isDarkTheme, colors, mode } = rest.theme;\n  const {\n    height = DEFAULT_APPBAR_HEIGHT,\n    elevation = 4,\n    backgroundColor: customBackground,\n    zIndex = 0,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n  // Let the user override the behaviour\n  const Wrapper =\n    typeof props.statusBarHeight === 'number' ? View : SafeAreaView;\n  return (\n    <Wrapper\n      style={\n        [\n          { backgroundColor, zIndex, elevation },\n          shadow(elevation),\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Appbar\n        style={[\n          { height, backgroundColor, marginTop: statusBarHeight },\n          styles.appbar,\n          restStyle,\n        ]}\n        dark={dark}\n        {...rest}\n      />\n    </Wrapper>\n  );\n};\n\nAppbarHeader.displayName = 'Appbar.Header';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nconst AppbarHeaderWithTheme = withTheme(AppbarHeader);\n// @component-docs ignore-next-line\nexport { AppbarHeaderWithTheme as AppbarHeader };\n"]},"metadata":{},"sourceType":"module"}