{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { Animated, StyleSheet, TouchableWithoutFeedback, View, I18nManager } from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = _ref => {\n  let {\n    numeric,\n    children,\n    onPress,\n    sortDirection,\n    theme,\n    style,\n    numberOfLines = 1,\n    ...rest\n  } = _ref;\n  const {\n    current: spinAnim\n  } = React.useRef(new Animated.Value(sortDirection === 'ascending' ? 0 : 1));\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, [sortDirection, spinAnim]);\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg']\n  });\n  const icon = sortDirection ? /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.icon, {\n      transform: [{\n        rotate: spin\n      }]\n    }]\n  }, /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    name: \"arrow-up\",\n    size: 16,\n    color: theme.colors.text,\n    direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n  })) : null;\n  return /*#__PURE__*/React.createElement(TouchableWithoutFeedback, _extends({\n    disabled: !onPress,\n    onPress: onPress\n  }, rest), /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, numeric && styles.right, style]\n  }, icon, /*#__PURE__*/React.createElement(Text, {\n    style: [styles.cell, sortDirection ? styles.sorted : {\n      color: textColor\n    }],\n    numberOfLines: numberOfLines\n  }, children)));\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(DataTableTitle); // @component-docs ignore-next-line\n\nexport { DataTableTitle };","map":{"version":3,"mappings":"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","names":["React","Animated","StyleSheet","TouchableWithoutFeedback","View","I18nManager","color","MaterialCommunityIcon","Text","withTheme","DataTableTitle","numeric","children","onPress","sortDirection","theme","style","numberOfLines","rest","current","spinAnim","useRef","Value","useEffect","timing","toValue","duration","useNativeDriver","start","textColor","colors","text","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","styles","transform","rotate","name","size","direction","isRTL","disabled","container","right","cell","sorted","displayName","create","flex","flexDirection","alignContent","paddingVertical","justifyContent","height","lineHeight","fontSize","fontWeight","alignItems","marginLeft"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\DataTable\\DataTableTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={theme.colors.text}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            sortDirection ? styles.sorted : { color: textColor },\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"module"}