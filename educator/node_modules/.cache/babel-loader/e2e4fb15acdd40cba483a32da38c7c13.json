{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { Text as NativeText, StyleSheet } from 'react-native';\nimport { withTheme } from '../../core/theming'; // @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\n\nconst Text = (_ref, ref) => {\n  let {\n    style,\n    theme,\n    ...rest\n  } = _ref;\n  const root = React.useRef(null);\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: args => {\n      var _root$current;\n\n      return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);\n    }\n  }));\n  return /*#__PURE__*/React.createElement(NativeText, _extends({}, rest, {\n    ref: root,\n    style: [{ ...theme.fonts.regular,\n      color: theme.colors.text\n    }, styles.text, style]\n  }));\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default withTheme( /*#__PURE__*/React.forwardRef(Text));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,IAAI,IAAIC,UADV,EAIEC,UAJF,QAKO,cALP;AAMA,SAASC,SAAT,QAA0B,oBAA1B,C,CAUA;;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMH,IAA6C,GAAG,OAEpDI,GAFoD,KAGjD;AAAA,MAFH;AAAEC,SAAF;AAASC,SAAT;AAAgB,OAAGC;AAAnB,GAEG;AACH,QAAMC,IAAI,GAAGT,KAAK,CAACU,MAANV,CAAgC,IAAhCA,CAAb;AAEAA,OAAK,CAACW,mBAANX,CAA0BK,GAA1BL,EAA+B,OAAO;AACpCY,kBAAc,EAAGC,IAAD;AAAA;;AAAA,8BAAkBJ,IAAI,CAACK,OAAvB,kDAAkBC,cAAcH,cAAd,CAA6BC,IAA7B,CAAlB;AAAA;AADoB,GAAP,CAA/Bb;AAIA,sBACEA,oBAACE,UAAD,eACMM,IADN;AAEEH,OAAG,EAAEI,IAFP;AAGEH,SAAK,EAAE,CACL,EACE,GAAGC,KAAK,CAACS,KAANT,CAAYU,OADjB;AAEEC,WAAK,EAAEX,KAAK,CAACY,MAANZ,CAAaa;AAFtB,KADK,EAKLC,MAAM,CAACD,IALF,EAMLd,KANK;AAHT,KADF;AAVF;;AA0BA,MAAMe,MAAM,GAAGlB,UAAU,CAACmB,MAAXnB,CAAkB;AAC/BiB,MAAI,EAAE;AACJG,aAAS,EAAE;AADP;AADyB,CAAlBpB,CAAf;AAMA,eAAeC,SAAS,eAACJ,KAAK,CAACwB,UAANxB,CAAiBC,IAAjBD,CAAD,CAAxB","names":["React","Text","NativeText","StyleSheet","withTheme","ref","style","theme","rest","root","useRef","useImperativeHandle","setNativeProps","args","current","_root$current","fonts","regular","color","colors","text","styles","create","textAlign","forwardRef"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\Typography\\Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Text as NativeText,\n  TextStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.RefForwardingComponent<{}, Props> = (\n  { style, theme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(React.forwardRef(Text));\n"]},"metadata":{},"sourceType":"module"}