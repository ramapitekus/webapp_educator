{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// tslint:disable:max-classes-per-file\nimport { EventType, PlatformEvent } from \"../common/Exports\";\nexport class SpeechRecognitionEvent extends PlatformEvent {\n  constructor(eventName, requestId, sessionId) {\n    let eventType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : EventType.Info;\n    super(eventName, eventType);\n    this.privRequestId = requestId;\n    this.privSessionId = sessionId;\n  }\n\n  get requestId() {\n    return this.privRequestId;\n  }\n\n  get sessionId() {\n    return this.privSessionId;\n  }\n\n}\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\n  constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n    super(\"RecognitionTriggeredEvent\", requestId, sessionId);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n}\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\n  constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n    super(\"ListeningStartedEvent\", requestId, sessionId);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n}\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\n  constructor(requestId, authFetchEventid, sessionId) {\n    super(\"ConnectingToServiceEvent\", requestId, sessionId);\n    this.privAuthFetchEventid = authFetchEventid;\n  }\n\n  get authFetchEventid() {\n    return this.privAuthFetchEventid;\n  }\n\n}\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\n  constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId) {\n    super(\"RecognitionStartedEvent\", requestId, sessionId);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n    this.privAuthFetchEventId = authFetchEventId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n  get authFetchEventId() {\n    return this.privAuthFetchEventId;\n  }\n\n}\nexport var RecognitionCompletionStatus;\n\n(function (RecognitionCompletionStatus) {\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"Success\"] = 0] = \"Success\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceError\"] = 1] = \"AudioSourceError\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceTimeout\"] = 2] = \"AudioSourceTimeout\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchError\"] = 3] = \"AuthTokenFetchError\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchTimeout\"] = 4] = \"AuthTokenFetchTimeout\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnAuthorized\"] = 5] = \"UnAuthorized\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectTimeout\"] = 6] = \"ConnectTimeout\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectError\"] = 7] = \"ConnectError\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"ClientRecognitionActivityTimeout\"] = 8] = \"ClientRecognitionActivityTimeout\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnknownError\"] = 9] = \"UnknownError\";\n})(RecognitionCompletionStatus || (RecognitionCompletionStatus = {}));\n\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\n  constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId, serviceTag, status, error) {\n    super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n    this.privAuthFetchEventId = authFetchEventId;\n    this.privStatus = status;\n    this.privError = error;\n    this.privServiceTag = serviceTag;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n  get authFetchEventId() {\n    return this.privAuthFetchEventId;\n  }\n\n  get serviceTag() {\n    return this.privServiceTag;\n  }\n\n  get status() {\n    return this.privStatus;\n  }\n\n  get error() {\n    return this.privError;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["EventType","PlatformEvent","SpeechRecognitionEvent","constructor","eventName","requestId","sessionId","eventType","Info","privRequestId","privSessionId","RecognitionTriggeredEvent","audioSourceId","audioNodeId","privAudioSourceId","privAudioNodeId","ListeningStartedEvent","ConnectingToServiceEvent","authFetchEventid","privAuthFetchEventid","RecognitionStartedEvent","authFetchEventId","privAuthFetchEventId","RecognitionCompletionStatus","RecognitionEndedEvent","serviceTag","status","error","Success","Error","privStatus","privError","privServiceTag"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ_2\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common.speech\\src\\common.speech\\RecognitionEvents.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechRecognitionEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n    private privSessionId: string;\r\n\r\n    constructor(eventName: string, requestId: string, sessionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n\r\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"ListeningStartedEvent\", requestId, sessionId);\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\r\n    private privAuthFetchEventid: string;\r\n\r\n    constructor(requestId: string, authFetchEventid: string, sessionId: string) {\r\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\r\n        this.privAuthFetchEventid = authFetchEventid;\r\n    }\r\n\r\n    public get authFetchEventid(): string {\r\n        return this.privAuthFetchEventid;\r\n    }\r\n}\r\n\r\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string, authFetchEventId: string, sessionId: string) {\r\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport enum RecognitionCompletionStatus {\r\n    Success,\r\n    AudioSourceError,\r\n    AudioSourceTimeout,\r\n    AuthTokenFetchError,\r\n    AuthTokenFetchTimeout,\r\n    UnAuthorized,\r\n    ConnectTimeout,\r\n    ConnectError,\r\n    ClientRecognitionActivityTimeout,\r\n    UnknownError,\r\n}\r\n\r\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n    private privServiceTag: string;\r\n    private privStatus: RecognitionCompletionStatus;\r\n    private privError: string;\r\n\r\n    constructor(\r\n        requestId: string,\r\n        audioSourceId: string,\r\n        audioNodeId: string,\r\n        authFetchEventId: string,\r\n        sessionId: string,\r\n        serviceTag: string,\r\n        status: RecognitionCompletionStatus,\r\n        error: string) {\r\n\r\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privStatus = status;\r\n        this.privError = error;\r\n        this.privServiceTag = serviceTag;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n\r\n    public get serviceTag(): string {\r\n        return this.privServiceTag;\r\n    }\r\n\r\n    public get status(): RecognitionCompletionStatus {\r\n        return this.privStatus;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}