{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { AutoDetectSourceLanguagesOpenRangeOptionName, CognitiveSubscriptionKeyAuthentication, CognitiveTokenAuthentication, Context, OS, SpeechServiceConfig, SpeechSynthesisConnectionFactory, SynthesisAdapterBase, SynthesisRestAdapter, SynthesizerConfig } from \"../common.speech/Exports\";\nimport { createNoDashGuid, marshalPromiseToCallbacks, Queue } from \"../common/Exports\";\nimport { AudioFileWriter } from \"./Audio/AudioFileWriter\";\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat\";\nimport { PushAudioOutputStreamImpl } from \"./Audio/AudioOutputStream\";\nimport { Contracts } from \"./Contracts\";\nimport { AudioConfig, PropertyId, PullAudioOutputStream, PushAudioOutputStreamCallback, SpeechSynthesisOutputFormat, SynthesisVoicesResult } from \"./Exports\";\n/**\r\n * Defines the class SpeechSynthesizer for text to speech.\r\n * Updated in version 1.16.0\r\n * @class SpeechSynthesizer\r\n */\n\nexport class SpeechSynthesizer {\n  /**\r\n   * SpeechSynthesizer constructor.\r\n   * @constructor\r\n   * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\r\n   * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\r\n   */\n  constructor(speechConfig, audioConfig) {\n    const speechConfigImpl = speechConfig;\n    Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n\n    if (audioConfig !== null) {\n      if (audioConfig === undefined) {\n        this.audioConfig = typeof window === \"undefined\" ? undefined : AudioConfig.fromDefaultSpeakerOutput();\n      } else {\n        this.audioConfig = audioConfig;\n      }\n    }\n\n    this.privProperties = speechConfigImpl.properties.clone();\n    this.privDisposed = false;\n    this.privSynthesizing = false;\n    this.privConnectionFactory = new SpeechSynthesisConnectionFactory();\n    this.synthesisRequestQueue = new Queue();\n    this.implCommonSynthesizeSetup();\n  }\n  /**\r\n   * Gets the authorization token used to communicate with the service.\r\n   * @member SpeechSynthesizer.prototype.authorizationToken\r\n   * @function\r\n   * @public\r\n   * @returns {string} Authorization token.\r\n   */\n\n\n  get authorizationToken() {\n    return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n  }\n  /**\r\n   * Gets/Sets the authorization token used to communicate with the service.\r\n   * @member SpeechSynthesizer.prototype.authorizationToken\r\n   * @function\r\n   * @public\r\n   * @param {string} token - Authorization token.\r\n   */\n\n\n  set authorizationToken(token) {\n    Contracts.throwIfNullOrWhitespace(token, \"token\");\n    this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\n  }\n  /**\r\n   * The collection of properties and their values defined for this SpeechSynthesizer.\r\n   * @member SpeechSynthesizer.prototype.properties\r\n   * @function\r\n   * @public\r\n   * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\r\n   */\n\n\n  get properties() {\n    return this.privProperties;\n  }\n  /**\r\n   * Indicates if auto detect source language is enabled\r\n   * @member SpeechSynthesizer.prototype.properties\r\n   * @function\r\n   * @public\r\n   * @returns {boolean} if auto detect source language is enabled\r\n   */\n\n\n  get autoDetectSourceLanguage() {\n    return this.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === AutoDetectSourceLanguagesOpenRangeOptionName;\n  }\n  /**\r\n   * SpeechSynthesizer constructor.\r\n   * @constructor\r\n   * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\r\n   * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\r\n   * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\r\n   */\n\n\n  static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n    const speechConfigImpl = speechConfig;\n    autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n    return new SpeechSynthesizer(speechConfig, audioConfig);\n  }\n\n  buildSsml(text) {\n    const languageToDefaultVoice = {\n      [\"af-ZA\"]: \"af-ZA-AdriNeural\",\n      [\"am-ET\"]: \"am-ET-AmehaNeural\",\n      [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\n      [\"ar-BH\"]: \"ar-BH-AliNeural\",\n      [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\n      [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\n      [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\n      [\"ar-JO\"]: \"ar-JO-SanaNeural\",\n      [\"ar-KW\"]: \"ar-KW-FahedNeural\",\n      [\"ar-LY\"]: \"ar-LY-ImanNeural\",\n      [\"ar-MA\"]: \"ar-MA-JamalNeural\",\n      [\"ar-QA\"]: \"ar-QA-AmalNeural\",\n      [\"ar-SA\"]: \"ar-SA-HamedNeural\",\n      [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\n      [\"ar-TN\"]: \"ar-TN-HediNeural\",\n      [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\n      [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\n      [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\n      [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\n      [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\n      [\"cy-GB\"]: \"cy-GB-AledNeural\",\n      [\"da-DK\"]: \"da-DK-ChristelNeural\",\n      [\"de-AT\"]: \"de-AT-IngridNeural\",\n      [\"de-CH\"]: \"de-CH-JanNeural\",\n      [\"de-DE\"]: \"de-DE-KatjaNeural\",\n      [\"el-GR\"]: \"el-GR-AthinaNeural\",\n      [\"en-AU\"]: \"en-AU-NatashaNeural\",\n      [\"en-CA\"]: \"en-CA-ClaraNeural\",\n      [\"en-GB\"]: \"en-GB-LibbyNeural\",\n      [\"en-HK\"]: \"en-HK-SamNeural\",\n      [\"en-IE\"]: \"en-IE-ConnorNeural\",\n      [\"en-IN\"]: \"en-IN-NeerjaNeural\",\n      [\"en-KE\"]: \"en-KE-AsiliaNeural\",\n      [\"en-NG\"]: \"en-NG-AbeoNeural\",\n      [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\n      [\"en-PH\"]: \"en-PH-JamesNeural\",\n      [\"en-SG\"]: \"en-SG-LunaNeural\",\n      [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\n      [\"en-US\"]: \"en-US-JennyNeural\",\n      [\"en-ZA\"]: \"en-ZA-LeahNeural\",\n      [\"es-AR\"]: \"es-AR-ElenaNeural\",\n      [\"es-BO\"]: \"es-BO-MarceloNeural\",\n      [\"es-CL\"]: \"es-CL-CatalinaNeural\",\n      [\"es-CO\"]: \"es-CO-GonzaloNeural\",\n      [\"es-CR\"]: \"es-CR-JuanNeural\",\n      [\"es-CU\"]: \"es-CU-BelkysNeural\",\n      [\"es-DO\"]: \"es-DO-EmilioNeural\",\n      [\"es-EC\"]: \"es-EC-AndreaNeural\",\n      [\"es-ES\"]: \"es-ES-AlvaroNeural\",\n      [\"es-GQ\"]: \"es-GQ-JavierNeural\",\n      [\"es-GT\"]: \"es-GT-AndresNeural\",\n      [\"es-HN\"]: \"es-HN-CarlosNeural\",\n      [\"es-MX\"]: \"es-MX-DaliaNeural\",\n      [\"es-NI\"]: \"es-NI-FedericoNeural\",\n      [\"es-PA\"]: \"es-PA-MargaritaNeural\",\n      [\"es-PE\"]: \"es-PE-AlexNeural\",\n      [\"es-PR\"]: \"es-PR-KarinaNeural\",\n      [\"es-PY\"]: \"es-PY-MarioNeural\",\n      [\"es-SV\"]: \"es-SV-LorenaNeural\",\n      [\"es-US\"]: \"es-US-AlonsoNeural\",\n      [\"es-UY\"]: \"es-UY-MateoNeural\",\n      [\"es-VE\"]: \"es-VE-PaolaNeural\",\n      [\"et-EE\"]: \"et-EE-AnuNeural\",\n      [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\n      [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\n      [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\n      [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\n      [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\n      [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\n      [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\n      [\"ga-IE\"]: \"ga-IE-ColmNeural\",\n      [\"gl-ES\"]: \"gl-ES-RoiNeural\",\n      [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\n      [\"he-IL\"]: \"he-IL-AvriNeural\",\n      [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\n      [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\n      [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\n      [\"id-ID\"]: \"id-ID-ArdiNeural\",\n      [\"it-IT\"]: \"it-IT-IsabellaNeural\",\n      [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\n      [\"jv-ID\"]: \"jv-ID-DimasNeural\",\n      [\"km-KH\"]: \"km-KH-PisethNeural\",\n      [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\n      [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\n      [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\n      [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\n      [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\n      [\"mt-MT\"]: \"mt-MT-GraceNeural\",\n      [\"my-MM\"]: \"my-MM-NilarNeural\",\n      [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\n      [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\n      [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\n      [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\n      [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\n      [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\n      [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\n      [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\n      [\"sk-SK\"]: \"sk-SK-LukasNeural\",\n      [\"sl-SI\"]: \"sl-SI-PetraNeural\",\n      [\"so-SO\"]: \"so-SO-MuuseNeural\",\n      [\"su-ID\"]: \"su-ID-JajangNeural\",\n      [\"sv-SE\"]: \"sv-SE-SofieNeural\",\n      [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\n      [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\n      [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\n      [\"ta-LK\"]: \"ta-LK-KumarNeural\",\n      [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\n      [\"te-IN\"]: \"te-IN-MohanNeural\",\n      [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\n      [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\n      [\"uk-UA\"]: \"uk-UA-OstapNeural\",\n      [\"ur-IN\"]: \"ur-IN-GulNeural\",\n      [\"ur-PK\"]: \"ur-PK-AsadNeural\",\n      [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\n      [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\n      [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\n      [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\n      [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\n      [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\"\n    };\n    let language = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\n    let voice = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice, \"\");\n    let ssml = SpeechSynthesizer.XMLEncode(text);\n\n    if (this.autoDetectSourceLanguage) {\n      language = \"en-US\";\n    } else {\n      voice = voice || languageToDefaultVoice[language];\n    }\n\n    if (voice) {\n      ssml = `<voice name='${voice}'>${ssml}</voice>`;\n    }\n\n    ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\n    return ssml;\n  }\n  /**\r\n   * Executes speech synthesis on plain text.\r\n   * The task returns the synthesis result.\r\n   * @member SpeechSynthesizer.prototype.speakTextAsync\r\n   * @function\r\n   * @public\r\n   * @param text - Text to be synthesized.\r\n   * @param cb - Callback that received the SpeechSynthesisResult.\r\n   * @param err - Callback invoked in case of an error.\r\n   * @param stream - AudioOutputStream to receive the synthesized audio.\r\n   */\n\n\n  speakTextAsync(text, cb, err, stream) {\n    this.speakImpl(text, false, cb, err, stream);\n  }\n  /**\r\n   * Executes speech synthesis on SSML.\r\n   * The task returns the synthesis result.\r\n   * @member SpeechSynthesizer.prototype.speakSsmlAsync\r\n   * @function\r\n   * @public\r\n   * @param ssml - SSML to be synthesized.\r\n   * @param cb - Callback that received the SpeechSynthesisResult.\r\n   * @param err - Callback invoked in case of an error.\r\n   * @param stream - AudioOutputStream to receive the synthesized audio.\r\n   */\n\n\n  speakSsmlAsync(ssml, cb, err, stream) {\n    this.speakImpl(ssml, true, cb, err, stream);\n  }\n  /**\r\n   * Get list of synthesis voices available.\r\n   * The task returns the synthesis voice result.\r\n   * @member SpeechSynthesizer.prototype.getVoicesAsync\r\n   * @function\r\n   * @async\r\n   * @public\r\n   * @param locale - Locale of voices in BCP-47 format; if left empty, get all available voices.\r\n   * @return {Promise<SynthesisVoicesResult>} - Promise of a SynthesisVoicesResult.\r\n   */\n\n\n  getVoicesAsync() {\n    let locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.getVoices(locale);\n    });\n  }\n  /**\r\n   * Dispose of associated resources.\r\n   * @member SpeechSynthesizer.prototype.close\r\n   * @function\r\n   * @public\r\n   */\n\n\n  close(cb, err) {\n    Contracts.throwIfDisposed(this.privDisposed);\n    marshalPromiseToCallbacks(this.dispose(true), cb, err);\n  }\n  /**\r\n   * @Internal\r\n   * Do not use externally, object returned will change without warning or notice.\r\n   */\n\n\n  get internalData() {\n    return this.privAdapter;\n  }\n  /**\r\n   * This method performs cleanup of resources.\r\n   * The Boolean parameter disposing indicates whether the method is called\r\n   * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n   * Derived classes should override this method to dispose resource if needed.\r\n   * @member SpeechSynthesizer.prototype.dispose\r\n   * @function\r\n   * @public\r\n   * @param {boolean} disposing - Flag to request disposal.\r\n   */\n\n\n  dispose(disposing) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.privDisposed) {\n        return;\n      }\n\n      if (disposing) {\n        if (this.privAdapter) {\n          yield this.privAdapter.dispose();\n        }\n      }\n\n      this.privDisposed = true;\n    });\n  } //\n  // ################################################################################################################\n  // IMPLEMENTATION.\n  // Move to independent class\n  // ################################################################################################################\n  //\n\n\n  createSynthesizerConfig(speechConfig) {\n    return new SynthesizerConfig(speechConfig, this.privProperties);\n  } // Creates the synthesis adapter\n\n\n  createSynthesisAdapter(authentication, connectionFactory, audioConfig, synthesizerConfig) {\n    return new SynthesisAdapterBase(authentication, connectionFactory, synthesizerConfig, this, this.audioConfig);\n  }\n\n  implCommonSynthesizeSetup() {\n    let osPlatform = typeof window !== \"undefined\" ? \"Browser\" : \"Node\";\n    let osName = \"unknown\";\n    let osVersion = \"unknown\";\n\n    if (typeof navigator !== \"undefined\") {\n      osPlatform = osPlatform + \"/\" + navigator.platform;\n      osName = navigator.userAgent;\n      osVersion = navigator.appVersion;\n    }\n\n    const synthesizerConfig = this.createSynthesizerConfig(new SpeechServiceConfig(new Context(new OS(osPlatform, osName, osVersion))));\n    const subscriptionKey = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\n    const authentication = subscriptionKey && subscriptionKey !== \"\" ? new CognitiveSubscriptionKeyAuthentication(subscriptionKey) : new CognitiveTokenAuthentication(authFetchEventId => {\n      const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\n      return Promise.resolve(authorizationToken);\n    }, authFetchEventId => {\n      const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\n      return Promise.resolve(authorizationToken);\n    });\n    this.privAdapter = this.createSynthesisAdapter(authentication, this.privConnectionFactory, this.audioConfig, synthesizerConfig);\n    this.privAdapter.audioOutputFormat = AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat[this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]);\n    this.privRestAdapter = new SynthesisRestAdapter(synthesizerConfig);\n  }\n\n  speakImpl(text, IsSsml, cb, err, dataStream) {\n    try {\n      Contracts.throwIfDisposed(this.privDisposed);\n      const requestId = createNoDashGuid();\n      let audioDestination;\n\n      if (dataStream instanceof PushAudioOutputStreamCallback) {\n        audioDestination = new PushAudioOutputStreamImpl(dataStream);\n      } else if (dataStream instanceof PullAudioOutputStream) {\n        audioDestination = dataStream;\n      } else if (dataStream !== undefined) {\n        audioDestination = new AudioFileWriter(dataStream);\n      } else {\n        audioDestination = undefined;\n      }\n\n      this.synthesisRequestQueue.enqueue(new SynthesisRequest(requestId, text, IsSsml, e => {\n        this.privSynthesizing = false;\n\n        if (!!cb) {\n          try {\n            cb(e);\n          } catch (e) {\n            if (!!err) {\n              err(e);\n            }\n          }\n        }\n\n        cb = undefined;\n        /* tslint:disable:no-empty */\n\n        this.adapterSpeak().catch(() => {});\n      }, e => {\n        if (!!err) {\n          err(e);\n        }\n      }, audioDestination));\n      /* tslint:disable:no-empty */\n\n      this.adapterSpeak().catch(() => {});\n    } catch (error) {\n      if (!!err) {\n        if (error instanceof Error) {\n          const typedError = error;\n          err(typedError.name + \": \" + typedError.message);\n        } else {\n          err(error);\n        }\n      } // Destroy the synthesizer.\n\n      /* tslint:disable:no-empty */\n\n\n      this.dispose(true).catch(() => {});\n    }\n  }\n\n  getVoices(locale) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const requestId = createNoDashGuid();\n      const response = yield this.privRestAdapter.getVoicesList(requestId);\n\n      if (response.ok && Array.isArray(response.json)) {\n        let json = response.json;\n\n        if (!!locale && locale.length > 0) {\n          json = json.filter(item => !!item.Locale && item.Locale.toLowerCase() === locale.toLowerCase());\n        }\n\n        return new SynthesisVoicesResult(requestId, json);\n      } else {\n        return new SynthesisVoicesResult(requestId, {\n          errorDetails: `Error: ${response.status}: ${response.statusText}`\n        });\n      }\n    });\n  }\n\n  adapterSpeak() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.privDisposed && !this.privSynthesizing) {\n        this.privSynthesizing = true;\n        const request = yield this.synthesisRequestQueue.dequeue();\n        return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\n      }\n    });\n  }\n\n  static XMLEncode(text) {\n    return text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\");\n  }\n\n} // tslint:disable-next-line:max-classes-per-file\n\nexport class SynthesisRequest {\n  constructor(requestId, text, isSSML, cb, err, dataStream) {\n    this.requestId = requestId;\n    this.text = text;\n    this.isSSML = isSSML;\n    this.cb = cb;\n    this.err = err;\n    this.dataStream = dataStream;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["AutoDetectSourceLanguagesOpenRangeOptionName","CognitiveSubscriptionKeyAuthentication","CognitiveTokenAuthentication","Context","OS","SpeechServiceConfig","SpeechSynthesisConnectionFactory","SynthesisAdapterBase","SynthesisRestAdapter","SynthesizerConfig","createNoDashGuid","marshalPromiseToCallbacks","Queue","AudioFileWriter","AudioOutputFormatImpl","PushAudioOutputStreamImpl","Contracts","AudioConfig","PropertyId","PullAudioOutputStream","PushAudioOutputStreamCallback","SpeechSynthesisOutputFormat","SynthesisVoicesResult","SpeechSynthesizer","constructor","speechConfig","audioConfig","speechConfigImpl","throwIfNull","undefined","window","fromDefaultSpeakerOutput","privProperties","properties","clone","privDisposed","privSynthesizing","privConnectionFactory","synthesisRequestQueue","implCommonSynthesizeSetup","authorizationToken","getProperty","SpeechServiceAuthorization_Token","token","throwIfNullOrWhitespace","setProperty","autoDetectSourceLanguage","SpeechServiceConnection_AutoDetectSourceLanguages","FromConfig","autoDetectSourceLanguageConfig","mergeTo","buildSsml","text","languageToDefaultVoice","language","SpeechServiceConnection_SynthLanguage","voice","SpeechServiceConnection_SynthVoice","ssml","XMLEncode","speakTextAsync","cb","err","stream","speakImpl","speakSsmlAsync","getVoicesAsync","locale","getVoices","close","throwIfDisposed","dispose","internalData","privAdapter","disposing","createSynthesizerConfig","createSynthesisAdapter","authentication","connectionFactory","synthesizerConfig","osPlatform","osName","osVersion","navigator","platform","userAgent","appVersion","subscriptionKey","SpeechServiceConnection_Key","authFetchEventId","Promise","resolve","audioOutputFormat","fromSpeechSynthesisOutputFormat","SpeechServiceConnection_SynthOutputFormat","privRestAdapter","IsSsml","dataStream","requestId","audioDestination","enqueue","SynthesisRequest","e","adapterSpeak","catch","error","Error","typedError","name","message","response","getVoicesList","ok","Array","isArray","json","length","filter","item","Locale","toLowerCase","errorDetails","status","statusText","request","dequeue","Speak","isSSML","replace"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ_2\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\sdk\\src\\sdk\\SpeechSynthesizer.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PathLike } from \"fs\";\r\nimport { IRestResponse } from \"../common.browser/RestMessageAdapter\";\r\nimport {\r\n    AutoDetectSourceLanguagesOpenRangeOptionName,\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    OS,\r\n    SpeechServiceConfig,\r\n    SpeechSynthesisConnectionFactory,\r\n    SynthesisAdapterBase,\r\n    SynthesisRestAdapter,\r\n    SynthesizerConfig,\r\n} from \"../common.speech/Exports\";\r\nimport {\r\n    createNoDashGuid,\r\n    IAudioDestination,\r\n    IStringDictionary,\r\n    marshalPromiseToCallbacks,\r\n    Queue\r\n} from \"../common/Exports\";\r\nimport { AudioOutputConfigImpl } from \"./Audio/AudioConfig\";\r\nimport { AudioFileWriter } from \"./Audio/AudioFileWriter\";\r\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat\";\r\nimport {\r\n    PullAudioOutputStreamImpl,\r\n    PushAudioOutputStreamImpl\r\n} from \"./Audio/AudioOutputStream\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    AudioConfig,\r\n    AudioOutputStream,\r\n    AutoDetectSourceLanguageConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeechConfig,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisOutputFormat,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SynthesisVoicesResult,\r\n} from \"./Exports\";\r\nimport { SpeechConfigImpl } from \"./SpeechConfig\";\r\n\r\n/**\r\n * Defines the class SpeechSynthesizer for text to speech.\r\n * Updated in version 1.16.0\r\n * @class SpeechSynthesizer\r\n */\r\nexport class SpeechSynthesizer {\r\n    protected audioConfig: AudioConfig;\r\n    protected privAdapter: SynthesisAdapterBase;\r\n    protected privRestAdapter: SynthesisRestAdapter;\r\n    protected privProperties: PropertyCollection;\r\n    protected synthesisRequestQueue: Queue<SynthesisRequest>;\r\n\r\n    /**\r\n     * Defines event handler for synthesis start events.\r\n     * @member SpeechSynthesizer.prototype.synthesisStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisStarted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesizing events.\r\n     * @member SpeechSynthesizer.prototype.synthesizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesizing: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis completed events.\r\n     * @member SpeechSynthesizer.prototype.synthesisCompleted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisCompleted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis cancelled events.\r\n     * @member SpeechSynthesizer.prototype.SynthesisCanceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public SynthesisCanceled: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for word boundary events\r\n     * @member SpeechSynthesizer.prototype.wordBoundary\r\n     * @function\r\n     * @public\r\n     */\r\n    public wordBoundary: (sender: SpeechSynthesizer, event: SpeechSynthesisWordBoundaryEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for bookmark reached events\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.bookmarkReached\r\n     * @function\r\n     * @public\r\n     */\r\n    public bookmarkReached: (sender: SpeechSynthesizer, event: SpeechSynthesisBookmarkEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for viseme received event\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.visemeReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public visemeReceived: (sender: SpeechSynthesizer, event: SpeechSynthesisVisemeEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeechSynthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeechSynthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeechSynthesizer.\r\n     * @member SpeechSynthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Indicates if auto detect source language is enabled\r\n     * @member SpeechSynthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {boolean} if auto detect source language is enabled\r\n     */\r\n    public get autoDetectSourceLanguage(): boolean {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === AutoDetectSourceLanguagesOpenRangeOptionName;\r\n    }\r\n\r\n    private privDisposed: boolean;\r\n    private privConnectionFactory: ISynthesisConnectionFactory;\r\n    private privSynthesizing: boolean;\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        if (audioConfig !== null) {\r\n            if (audioConfig === undefined) {\r\n                this.audioConfig = (typeof window === \"undefined\") ? undefined : AudioConfig.fromDefaultSpeakerOutput();\r\n            } else {\r\n                this.audioConfig = audioConfig;\r\n            }\r\n        }\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.privDisposed = false;\r\n        this.privSynthesizing = false;\r\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory();\r\n        this.synthesisRequestQueue = new Queue<SynthesisRequest>();\r\n        this.implCommonSynthesizeSetup();\r\n    }\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): SpeechSynthesizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        return new SpeechSynthesizer(speechConfig, audioConfig);\r\n    }\r\n\r\n    public buildSsml(text: string): string {\r\n        const languageToDefaultVoice: IStringDictionary<string>  = {\r\n            [\"af-ZA\"]: \"af-ZA-AdriNeural\",\r\n            [\"am-ET\"]: \"am-ET-AmehaNeural\",\r\n            [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\r\n            [\"ar-BH\"]: \"ar-BH-AliNeural\",\r\n            [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\r\n            [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\r\n            [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\r\n            [\"ar-JO\"]: \"ar-JO-SanaNeural\",\r\n            [\"ar-KW\"]: \"ar-KW-FahedNeural\",\r\n            [\"ar-LY\"]: \"ar-LY-ImanNeural\",\r\n            [\"ar-MA\"]: \"ar-MA-JamalNeural\",\r\n            [\"ar-QA\"]: \"ar-QA-AmalNeural\",\r\n            [\"ar-SA\"]: \"ar-SA-HamedNeural\",\r\n            [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\r\n            [\"ar-TN\"]: \"ar-TN-HediNeural\",\r\n            [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\r\n            [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\r\n            [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\r\n            [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\r\n            [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\r\n            [\"cy-GB\"]: \"cy-GB-AledNeural\",\r\n            [\"da-DK\"]: \"da-DK-ChristelNeural\",\r\n            [\"de-AT\"]: \"de-AT-IngridNeural\",\r\n            [\"de-CH\"]: \"de-CH-JanNeural\",\r\n            [\"de-DE\"]: \"de-DE-KatjaNeural\",\r\n            [\"el-GR\"]: \"el-GR-AthinaNeural\",\r\n            [\"en-AU\"]: \"en-AU-NatashaNeural\",\r\n            [\"en-CA\"]: \"en-CA-ClaraNeural\",\r\n            [\"en-GB\"]: \"en-GB-LibbyNeural\",\r\n            [\"en-HK\"]: \"en-HK-SamNeural\",\r\n            [\"en-IE\"]: \"en-IE-ConnorNeural\",\r\n            [\"en-IN\"]: \"en-IN-NeerjaNeural\",\r\n            [\"en-KE\"]: \"en-KE-AsiliaNeural\",\r\n            [\"en-NG\"]: \"en-NG-AbeoNeural\",\r\n            [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\r\n            [\"en-PH\"]: \"en-PH-JamesNeural\",\r\n            [\"en-SG\"]: \"en-SG-LunaNeural\",\r\n            [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\r\n            [\"en-US\"]: \"en-US-JennyNeural\",\r\n            [\"en-ZA\"]: \"en-ZA-LeahNeural\",\r\n            [\"es-AR\"]: \"es-AR-ElenaNeural\",\r\n            [\"es-BO\"]: \"es-BO-MarceloNeural\",\r\n            [\"es-CL\"]: \"es-CL-CatalinaNeural\",\r\n            [\"es-CO\"]: \"es-CO-GonzaloNeural\",\r\n            [\"es-CR\"]: \"es-CR-JuanNeural\",\r\n            [\"es-CU\"]: \"es-CU-BelkysNeural\",\r\n            [\"es-DO\"]: \"es-DO-EmilioNeural\",\r\n            [\"es-EC\"]: \"es-EC-AndreaNeural\",\r\n            [\"es-ES\"]: \"es-ES-AlvaroNeural\",\r\n            [\"es-GQ\"]: \"es-GQ-JavierNeural\",\r\n            [\"es-GT\"]: \"es-GT-AndresNeural\",\r\n            [\"es-HN\"]: \"es-HN-CarlosNeural\",\r\n            [\"es-MX\"]: \"es-MX-DaliaNeural\",\r\n            [\"es-NI\"]: \"es-NI-FedericoNeural\",\r\n            [\"es-PA\"]: \"es-PA-MargaritaNeural\",\r\n            [\"es-PE\"]: \"es-PE-AlexNeural\",\r\n            [\"es-PR\"]: \"es-PR-KarinaNeural\",\r\n            [\"es-PY\"]: \"es-PY-MarioNeural\",\r\n            [\"es-SV\"]: \"es-SV-LorenaNeural\",\r\n            [\"es-US\"]: \"es-US-AlonsoNeural\",\r\n            [\"es-UY\"]: \"es-UY-MateoNeural\",\r\n            [\"es-VE\"]: \"es-VE-PaolaNeural\",\r\n            [\"et-EE\"]: \"et-EE-AnuNeural\",\r\n            [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\r\n            [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\r\n            [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\r\n            [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\r\n            [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\r\n            [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\r\n            [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\r\n            [\"ga-IE\"]: \"ga-IE-ColmNeural\",\r\n            [\"gl-ES\"]: \"gl-ES-RoiNeural\",\r\n            [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\r\n            [\"he-IL\"]: \"he-IL-AvriNeural\",\r\n            [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\r\n            [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\r\n            [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\r\n            [\"id-ID\"]: \"id-ID-ArdiNeural\",\r\n            [\"it-IT\"]: \"it-IT-IsabellaNeural\",\r\n            [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\r\n            [\"jv-ID\"]: \"jv-ID-DimasNeural\",\r\n            [\"km-KH\"]: \"km-KH-PisethNeural\",\r\n            [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\r\n            [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\r\n            [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\r\n            [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\r\n            [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\r\n            [\"mt-MT\"]: \"mt-MT-GraceNeural\",\r\n            [\"my-MM\"]: \"my-MM-NilarNeural\",\r\n            [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\r\n            [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\r\n            [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\r\n            [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\r\n            [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\r\n            [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\r\n            [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\r\n            [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\r\n            [\"sk-SK\"]: \"sk-SK-LukasNeural\",\r\n            [\"sl-SI\"]: \"sl-SI-PetraNeural\",\r\n            [\"so-SO\"]: \"so-SO-MuuseNeural\",\r\n            [\"su-ID\"]: \"su-ID-JajangNeural\",\r\n            [\"sv-SE\"]: \"sv-SE-SofieNeural\",\r\n            [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\r\n            [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\r\n            [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\r\n            [\"ta-LK\"]: \"ta-LK-KumarNeural\",\r\n            [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\r\n            [\"te-IN\"]: \"te-IN-MohanNeural\",\r\n            [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\r\n            [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\r\n            [\"uk-UA\"]: \"uk-UA-OstapNeural\",\r\n            [\"ur-IN\"]: \"ur-IN-GulNeural\",\r\n            [\"ur-PK\"]: \"ur-PK-AsadNeural\",\r\n            [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\r\n            [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\r\n            [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\r\n            [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\r\n            [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\r\n            [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\",\r\n        };\r\n\r\n        let language = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\r\n        let voice = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice, \"\");\r\n        let ssml: string = SpeechSynthesizer.XMLEncode(text);\r\n        if (this.autoDetectSourceLanguage) {\r\n            language = \"en-US\";\r\n        } else {\r\n            voice = voice || languageToDefaultVoice[language];\r\n        }\r\n        if (voice) {\r\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\r\n        }\r\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\r\n        return ssml;\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on plain text.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakTextAsync\r\n     * @function\r\n     * @public\r\n     * @param text - Text to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakTextAsync(text: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(text, false, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on SSML.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakSsmlAsync\r\n     * @function\r\n     * @public\r\n     * @param ssml - SSML to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakSsmlAsync(ssml: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(ssml, true, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Get list of synthesis voices available.\r\n     * The task returns the synthesis voice result.\r\n     * @member SpeechSynthesizer.prototype.getVoicesAsync\r\n     * @function\r\n     * @async\r\n     * @public\r\n     * @param locale - Locale of voices in BCP-47 format; if left empty, get all available voices.\r\n     * @return {Promise<SynthesisVoicesResult>} - Promise of a SynthesisVoicesResult.\r\n     */\r\n    public async getVoicesAsync(locale: string = \"\"): Promise<SynthesisVoicesResult> {\r\n        return this.getVoices(locale);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechSynthesizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privAdapter;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member SpeechSynthesizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            if (this.privAdapter) {\r\n                await this.privAdapter.dispose();\r\n            }\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n    protected createSynthesizerConfig(speechConfig: SpeechServiceConfig): SynthesizerConfig {\r\n        return new SynthesizerConfig(\r\n            speechConfig,\r\n            this.privProperties);\r\n    }\r\n\r\n    // Creates the synthesis adapter\r\n    protected createSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisAdapterBase {\r\n        return new SynthesisAdapterBase(authentication, connectionFactory,\r\n            synthesizerConfig, this, this.audioConfig as AudioOutputConfigImpl);\r\n    }\r\n\r\n    protected implCommonSynthesizeSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const synthesizerConfig = this.createSynthesizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        const subscriptionKey = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (authFetchEventId: string): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        this.privAdapter = this.createSynthesisAdapter(\r\n            authentication,\r\n            this.privConnectionFactory,\r\n            this.audioConfig,\r\n            synthesizerConfig);\r\n\r\n        this.privAdapter.audioOutputFormat = AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(\r\n            (SpeechSynthesisOutputFormat as any)[this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]\r\n        );\r\n\r\n        this.privRestAdapter = new SynthesisRestAdapter(synthesizerConfig);\r\n    }\r\n\r\n    protected speakImpl(text: string, IsSsml: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privDisposed);\r\n            const requestId = createNoDashGuid();\r\n            let audioDestination;\r\n            if (dataStream instanceof PushAudioOutputStreamCallback) {\r\n                audioDestination = new PushAudioOutputStreamImpl(dataStream);\r\n            } else if (dataStream instanceof PullAudioOutputStream) {\r\n                audioDestination = dataStream as PullAudioOutputStreamImpl;\r\n            } else if (dataStream !== undefined) {\r\n                audioDestination = new AudioFileWriter(dataStream as PathLike);\r\n            } else {\r\n                audioDestination = undefined;\r\n            }\r\n            this.synthesisRequestQueue.enqueue(new SynthesisRequest(requestId, text, IsSsml, (e: SpeechSynthesisResult): void => {\r\n                this.privSynthesizing = false;\r\n                if (!!cb) {\r\n                    try {\r\n                        cb(e);\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(e);\r\n                        }\r\n                    }\r\n                }\r\n                cb = undefined;\r\n                /* tslint:disable:no-empty */\r\n                this.adapterSpeak().catch(() => { });\r\n\r\n            }, (e: string): void => {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }, audioDestination));\r\n\r\n            /* tslint:disable:no-empty */\r\n            this.adapterSpeak().catch(() => { });\r\n\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error as Error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error);\r\n                }\r\n            }\r\n\r\n            // Destroy the synthesizer.\r\n            /* tslint:disable:no-empty */\r\n            this.dispose(true).catch(() => { });\r\n        }\r\n    }\r\n\r\n    protected async getVoices(locale: string): Promise<SynthesisVoicesResult> {\r\n        const requestId = createNoDashGuid();\r\n        const response: IRestResponse = await this.privRestAdapter.getVoicesList(requestId);\r\n        if (response.ok && Array.isArray(response.json)) {\r\n            let json = response.json;\r\n            if (!!locale && locale.length > 0) {\r\n                json = json.filter((item: any) => !!item.Locale && item.Locale.toLowerCase() === locale.toLowerCase() );\r\n            }\r\n            return new SynthesisVoicesResult(requestId, json);\r\n        } else {\r\n            return new SynthesisVoicesResult(requestId, { errorDetails: `Error: ${response.status}: ${response.statusText}`});\r\n        }\r\n   }\r\n\r\n    protected async adapterSpeak(): Promise<void> {\r\n        if (!this.privDisposed && !this.privSynthesizing) {\r\n            this.privSynthesizing = true;\r\n            const request: SynthesisRequest = await this.synthesisRequestQueue.dequeue();\r\n            return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\r\n        }\r\n    }\r\n\r\n    private static XMLEncode(text: string): string {\r\n        return text.replace(/&/g, \"&amp;\")\r\n            .replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\")\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/'/g, \"&apos;\");\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class SynthesisRequest {\r\n    public requestId: string;\r\n    public text: string;\r\n    public isSSML: boolean;\r\n    public cb: (e: SpeechSynthesisResult) => void;\r\n    public err: (e: string) => void;\r\n    public dataStream: IAudioDestination;\r\n\r\n    constructor(requestId: string, text: string, isSSML: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: IAudioDestination) {\r\n        this.requestId = requestId;\r\n        this.text = text;\r\n        this.isSSML = isSSML;\r\n        this.cb = cb;\r\n        this.err = err;\r\n        this.dataStream = dataStream;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}