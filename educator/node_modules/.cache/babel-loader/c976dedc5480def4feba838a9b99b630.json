{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionEventArgs } from \"./Exports\";\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\n\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {SpeechRecognitionResult} result - The speech recognition result.\n   * @param {number} offset - The offset.\n   * @param {string} sessionId - The session id.\n   */\n  constructor(result, offset, sessionId) {\n    super(offset, sessionId);\n    this.privResult = result;\n  }\n  /**\n   * Specifies the recognition result.\n   * @member SpeechRecognitionEventArgs.prototype.result\n   * @function\n   * @public\n   * @returns {SpeechRecognitionResult} the recognition result.\n   */\n\n\n  get result() {\n    return this.privResult;\n  }\n\n}\n/**\n * Defines contents of conversation transcribed/transcribing event.\n * @class ConversationTranscriptionEventArgs\n */\n// tslint:disable-next-line:max-classes-per-file\n\nexport class ConversationTranscriptionEventArgs extends SpeechRecognitionEventArgs {}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,oBAAT,QAA8D,WAA9D;AAEA;;;;;AAIA,OAAM,MAAOC,0BAAP,SAA0CD,oBAA1C,CAA8D;AAGhE;;;;;;;AAOAE,cAAmBC,MAAnB,EAAoDC,MAApD,EAAqEC,SAArE,EAAuF;AACnF,UAAMD,MAAN,EAAcC,SAAd;AAEA,SAAKC,UAAL,GAAkBH,MAAlB;AACH;AAED;;;;;;;;;AAOiB,MAANA,MAAM;AACb,WAAO,KAAKG,UAAZ;AACH;;AAzB+D;AA4BpE;;;;AAIA;;AACA,OAAM,MAAOC,kCAAP,SAAkDN,0BAAlD,CAA4E","names":["RecognitionEventArgs","SpeechRecognitionEventArgs","constructor","result","offset","sessionId","privResult","ConversationTranscriptionEventArgs"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\sdk\\src\\sdk\\SpeechRecognitionEventArgs.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech recognizing/recognized event.\r\n * @class SpeechRecognitionEventArgs\r\n */\r\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: SpeechRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member SpeechRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): SpeechRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n\r\n/**\r\n * Defines contents of conversation transcribed/transcribing event.\r\n * @class ConversationTranscriptionEventArgs\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConversationTranscriptionEventArgs extends SpeechRecognitionEventArgs {\r\n}\r\n"]},"metadata":{},"sourceType":"module"}