{"ast":null,"code":"import { I18nManager } from 'react-native';\nexport const getCombinedStyles = _ref => {\n  let {\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB\n  } = _ref;\n  const {\n    isRTL\n  } = I18nManager;\n  const defaultPositionStyles = {\n    left: -distance,\n    right: undefined\n  };\n  const combinedStyles = {\n    innerWrapper: { ...defaultPositionStyles\n    },\n    iconWrapper: { ...defaultPositionStyles\n    },\n    absoluteFill: {}\n  };\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [distance, 0]\n      })\n    }];\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [Math.abs(distance) / 2, Math.abs(distance)]\n      })\n    }];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [0, distance]\n      })\n    }];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? distance : animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [distance, distance * 2]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, Math.abs(distance) / 2]\n      })\n    }];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [-distance, -distance * 2]\n      }) : -distance\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n  }\n\n  return combinedStyles;\n};","map":{"version":3,"mappings":"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","names":["I18nManager","getCombinedStyles","isAnimatedFromRight","isIconStatic","distance","animFAB","isRTL","defaultPositionStyles","left","right","undefined","combinedStyles","innerWrapper","iconWrapper","absoluteFill","animatedFromRight","animatedFromRightRTL","animatedFromLeft","animatedFromLeftRTL","transform","translateX","interpolate","inputRange","outputRange","Math","abs"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\FAB\\AnimatedFAB\\utils.ts"],"sourcesContent":["import { Animated, I18nManager, ViewStyle } from 'react-native';\n\ntype GetCombinedStylesProps = {\n  isAnimatedFromRight: boolean;\n  isIconStatic: boolean;\n  distance: number;\n  animFAB: Animated.Value;\n};\n\ntype CombinedStyles = {\n  innerWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  iconWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  absoluteFill: Animated.WithAnimatedValue<ViewStyle>;\n};\n\nexport const getCombinedStyles = ({\n  isAnimatedFromRight,\n  isIconStatic,\n  distance,\n  animFAB,\n}: GetCombinedStylesProps): CombinedStyles => {\n  const { isRTL } = I18nManager;\n\n  const defaultPositionStyles = { left: -distance, right: undefined };\n\n  const combinedStyles: CombinedStyles = {\n    innerWrapper: {\n      ...defaultPositionStyles,\n    },\n    iconWrapper: {\n      ...defaultPositionStyles,\n    },\n    absoluteFill: {},\n  };\n\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic ? 0 : animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [Math.abs(distance) / 2, Math.abs(distance)],\n        }),\n      },\n    ];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? 0\n          : animFAB.interpolate({\n              inputRange: [distance, 0],\n              outputRange: [-distance, 0],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [-distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [0, distance],\n        }),\n      },\n    ];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? distance\n          : animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [distance, distance * 2],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, Math.abs(distance) / 2],\n        }),\n      },\n    ];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [-distance, -distance * 2],\n            })\n          : -distance,\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n  }\n\n  return combinedStyles;\n};\n"]},"metadata":{},"sourceType":"module"}