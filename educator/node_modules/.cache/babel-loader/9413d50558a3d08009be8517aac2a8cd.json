{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ArgumentNullError } from \"../common/Exports\";\nimport { HeaderNames } from \"./HeaderNames\";\nimport { AuthInfo } from \"./IAuthentication\";\n/**\r\n * @class\r\n */\n\nexport class CognitiveSubscriptionKeyAuthentication {\n  /**\r\n   * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\r\n   * @constructor\r\n   * @param {string} subscriptionKey - The subscription key\r\n   */\n  constructor(subscriptionKey) {\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\n    this.fetch = authFetchEventId => {\n      return Promise.resolve(this.privAuthInfo);\n    };\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\n\n\n    this.fetchOnExpiry = authFetchEventId => {\n      return Promise.resolve(this.privAuthInfo);\n    };\n\n    if (!subscriptionKey) {\n      throw new ArgumentNullError(\"subscriptionKey\");\n    }\n\n    this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SACIA,iBADJ,QAEO,mBAFP;AAGA,SAASC,WAAT,QAA4B,eAA5B;AACA,SACIC,QADJ,QAGO,mBAHP;AAKA;;;;AAGA,OAAM,MAAOC,sCAAP,CAA6C;AAG/C;;;;;AAKAC,cAAYC,eAAZ,EAAmC;AAQnC;;;;;;;AAOO,iBAASC,gBAAD,IAAgD;AAC3D,aAAOC,OAAO,CAACC,OAAR,CAAgB,KAAKC,YAArB,CAAP;AACH,KAFM;AAIP;;;;;;;;;AAOO,yBAAiBH,gBAAD,IAAgD;AACnE,aAAOC,OAAO,CAACC,OAAR,CAAgB,KAAKC,YAArB,CAAP;AACH,KAFM;;AAzBH,QAAI,CAACJ,eAAL,EAAsB;AAClB,YAAM,IAAIL,iBAAJ,CAAsB,iBAAtB,CAAN;AACH;;AAED,SAAKS,YAAL,GAAoB,IAAIP,QAAJ,CAAaD,WAAW,CAACS,OAAzB,EAAkCL,eAAlC,CAApB;AACH;;AAd8C","names":["ArgumentNullError","HeaderNames","AuthInfo","CognitiveSubscriptionKeyAuthentication","constructor","subscriptionKey","authFetchEventId","Promise","resolve","privAuthInfo","AuthKey"],"sources":["C:\\Users\\ozgur\\Documents\\VSCodeProjects\\webapp_educator\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common.speech\\src\\common.speech\\CognitiveSubscriptionKeyAuthentication.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n} from \"../common/Exports\";\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication\r\n} from \"./IAuthentication\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport class CognitiveSubscriptionKeyAuthentication implements IAuthentication {\r\n    private privAuthInfo: AuthInfo;\r\n\r\n    /**\r\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\r\n     * @constructor\r\n     * @param {string} subscriptionKey - The subscription key\r\n     */\r\n    constructor(subscriptionKey: string) {\r\n        if (!subscriptionKey) {\r\n            throw new ArgumentNullError(\"subscriptionKey\");\r\n        }\r\n\r\n        this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    public fetch = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    public fetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}