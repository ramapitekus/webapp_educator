{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// tslint:disable:max-classes-per-file\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\nexport class AudioSourceEvent extends PlatformEvent {\n  constructor(eventName, audioSourceId) {\n    let eventType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EventType.Info;\n    super(eventName, eventType);\n    this.privAudioSourceId = audioSourceId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n}\nexport class AudioSourceInitializingEvent extends AudioSourceEvent {\n  constructor(audioSourceId) {\n    super(\"AudioSourceInitializingEvent\", audioSourceId);\n  }\n\n}\nexport class AudioSourceReadyEvent extends AudioSourceEvent {\n  constructor(audioSourceId) {\n    super(\"AudioSourceReadyEvent\", audioSourceId);\n  }\n\n}\nexport class AudioSourceOffEvent extends AudioSourceEvent {\n  constructor(audioSourceId) {\n    super(\"AudioSourceOffEvent\", audioSourceId);\n  }\n\n}\nexport class AudioSourceErrorEvent extends AudioSourceEvent {\n  constructor(audioSourceId, error) {\n    super(\"AudioSourceErrorEvent\", audioSourceId, EventType.Error);\n    this.privError = error;\n  }\n\n  get error() {\n    return this.privError;\n  }\n\n}\nexport class AudioStreamNodeEvent extends AudioSourceEvent {\n  constructor(eventName, audioSourceId, audioNodeId) {\n    super(eventName, audioSourceId);\n    this.privAudioNodeId = audioNodeId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n}\nexport class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\n  constructor(audioSourceId, audioNodeId) {\n    super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\n  }\n\n}\nexport class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\n  constructor(audioSourceId, audioNodeId) {\n    super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\n  }\n\n}\nexport class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\n  constructor(audioSourceId, audioNodeId) {\n    super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\n  }\n\n}\nexport class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\n  constructor(audioSourceId, audioNodeId, error) {\n    super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\n    this.privError = error;\n  }\n\n  get error() {\n    return this.privError;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA;AAEA,SAASA,SAAT,EAAoBC,aAApB,QAAyC,iBAAzC;AAEA,OAAM,MAAOC,gBAAP,SAAgCD,aAAhC,CAA6C;AAG/CE,cAAYC,SAAZ,EAA+BC,aAA/B,EAA2F;AAAA,QAArCC,SAAqC,uEAAdN,SAAS,CAACO,IAAI;AACvF,UAAMH,SAAN,EAAiBE,SAAjB;AACA,SAAKE,iBAAL,GAAyBH,aAAzB;AACH;;AAEuB,MAAbA,aAAa;AACpB,WAAO,KAAKG,iBAAZ;AACH;;AAV8C;AAanD,OAAM,MAAOC,4BAAP,SAA4CP,gBAA5C,CAA4D;AAC9DC,cAAYE,aAAZ,EAAiC;AAC7B,UAAM,8BAAN,EAAsCA,aAAtC;AACH;;AAH6D;AAMlE,OAAM,MAAOK,qBAAP,SAAqCR,gBAArC,CAAqD;AACvDC,cAAYE,aAAZ,EAAiC;AAC7B,UAAM,uBAAN,EAA+BA,aAA/B;AACH;;AAHsD;AAM3D,OAAM,MAAOM,mBAAP,SAAmCT,gBAAnC,CAAmD;AACrDC,cAAYE,aAAZ,EAAiC;AAC7B,UAAM,qBAAN,EAA6BA,aAA7B;AACH;;AAHoD;AAMzD,OAAM,MAAOO,qBAAP,SAAqCV,gBAArC,CAAqD;AAGvDC,cAAYE,aAAZ,EAAmCQ,KAAnC,EAAgD;AAC5C,UAAM,uBAAN,EAA+BR,aAA/B,EAA8CL,SAAS,CAACc,KAAxD;AACA,SAAKC,SAAL,GAAiBF,KAAjB;AACH;;AAEe,MAALA,KAAK;AACZ,WAAO,KAAKE,SAAZ;AACH;;AAVsD;AAa3D,OAAM,MAAOC,oBAAP,SAAoCd,gBAApC,CAAoD;AAGtDC,cAAYC,SAAZ,EAA+BC,aAA/B,EAAsDY,WAAtD,EAAyE;AACrE,UAAMb,SAAN,EAAiBC,aAAjB;AACA,SAAKa,eAAL,GAAuBD,WAAvB;AACH;;AAEqB,MAAXA,WAAW;AAClB,WAAO,KAAKC,eAAZ;AACH;;AAVqD;AAa1D,OAAM,MAAOC,6BAAP,SAA6CH,oBAA7C,CAAiE;AACnEb,cAAYE,aAAZ,EAAmCY,WAAnC,EAAsD;AAClD,UAAM,+BAAN,EAAuCZ,aAAvC,EAAsDY,WAAtD;AACH;;AAHkE;AAMvE,OAAM,MAAOG,4BAAP,SAA4CJ,oBAA5C,CAAgE;AAClEb,cAAYE,aAAZ,EAAmCY,WAAnC,EAAsD;AAClD,UAAM,8BAAN,EAAsCZ,aAAtC,EAAqDY,WAArD;AACH;;AAHiE;AAMtE,OAAM,MAAOI,4BAAP,SAA4CL,oBAA5C,CAAgE;AAClEb,cAAYE,aAAZ,EAAmCY,WAAnC,EAAsD;AAClD,UAAM,8BAAN,EAAsCZ,aAAtC,EAAqDY,WAArD;AACH;;AAHiE;AAMtE,OAAM,MAAOK,yBAAP,SAAyCN,oBAAzC,CAA6D;AAG/Db,cAAYE,aAAZ,EAAmCY,WAAnC,EAAwDJ,KAAxD,EAAqE;AACjE,UAAM,2BAAN,EAAmCR,aAAnC,EAAkDY,WAAlD;AACA,SAAKF,SAAL,GAAiBF,KAAjB;AACH;;AAEe,MAALA,KAAK;AACZ,WAAO,KAAKE,SAAZ;AACH;;AAV8D","names":["EventType","PlatformEvent","AudioSourceEvent","constructor","eventName","audioSourceId","eventType","Info","privAudioSourceId","AudioSourceInitializingEvent","AudioSourceReadyEvent","AudioSourceOffEvent","AudioSourceErrorEvent","error","Error","privError","AudioStreamNodeEvent","audioNodeId","privAudioNodeId","AudioStreamNodeAttachingEvent","AudioStreamNodeAttachedEvent","AudioStreamNodeDetachedEvent","AudioStreamNodeErrorEvent"],"sources":["C:\\Users\\ozgur\\Documents\\VSCodeProjects\\webapp_educator\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common\\src\\common\\AudioSourceEvents.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// tslint:disable:max-classes-per-file\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class AudioSourceEvent extends PlatformEvent {\r\n    private privAudioSourceId: string;\r\n\r\n    constructor(eventName: string, audioSourceId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privAudioSourceId = audioSourceId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n}\r\n\r\nexport class AudioSourceInitializingEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceReadyEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceReadyEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceOffEvent extends AudioSourceEvent {\r\n    constructor(audioSourceId: string) {\r\n        super(\"AudioSourceOffEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceErrorEvent extends AudioSourceEvent {\r\n    private privError: string;\r\n\r\n    constructor(audioSourceId: string, error: string) {\r\n        super(\"AudioSourceErrorEvent\", audioSourceId, EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeEvent extends AudioSourceEvent {\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(eventName: string, audioSourceId: string, audioNodeId: string) {\r\n        super(eventName, audioSourceId);\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\r\n    constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\r\n    private privError: string;\r\n\r\n    constructor(audioSourceId: string, audioNodeId: string, error: string) {\r\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}