{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { InvalidOperationError } from \"./Error\";\nimport { createNoDashGuid } from \"./Guid\";\nexport var MessageType;\n\n(function (MessageType) {\n  MessageType[MessageType[\"Text\"] = 0] = \"Text\";\n  MessageType[MessageType[\"Binary\"] = 1] = \"Binary\";\n})(MessageType || (MessageType = {}));\n\nexport class ConnectionMessage {\n  constructor(messageType, body, headers, id) {\n    this.privBody = null;\n\n    if (messageType === MessageType.Text && body && !(typeof body === \"string\")) {\n      throw new InvalidOperationError(\"Payload must be a string\");\n    }\n\n    if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\n      throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\n    }\n\n    this.privMessageType = messageType;\n    this.privBody = body;\n    this.privHeaders = headers ? headers : {};\n    this.privId = id ? id : createNoDashGuid();\n\n    switch (this.messageType) {\n      case MessageType.Binary:\n        this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\n        break;\n\n      case MessageType.Text:\n        this.privSize = this.textBody.length;\n    }\n  }\n\n  get messageType() {\n    return this.privMessageType;\n  }\n\n  get headers() {\n    return this.privHeaders;\n  }\n\n  get body() {\n    return this.privBody;\n  }\n\n  get textBody() {\n    if (this.privMessageType === MessageType.Binary) {\n      throw new InvalidOperationError(\"Not supported for binary message\");\n    }\n\n    return this.privBody;\n  }\n\n  get binaryBody() {\n    if (this.privMessageType === MessageType.Text) {\n      throw new InvalidOperationError(\"Not supported for text message\");\n    }\n\n    return this.privBody;\n  }\n\n  get id() {\n    return this.privId;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,qBAAT,QAAsC,SAAtC;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAGA,WAAYC,WAAZ;;AAAA,WAAYA,WAAZ,EAAuB;AACnBA;AACAA;AACH,CAHD,EAAYA,WAAW,KAAXA,WAAW,MAAvB;;AAKA,OAAM,MAAOC,iBAAP,CAAwB;AAS1BC,cACIC,WADJ,EAEIC,IAFJ,EAGIC,OAHJ,EAIIC,EAJJ,EAIe;AATP,oBAAgB,IAAhB;;AAWJ,QAAIH,WAAW,KAAKH,WAAW,CAACO,IAA5B,IAAoCH,IAApC,IAA4C,EAAE,OAAQA,IAAR,KAAkB,QAApB,CAAhD,EAA+E;AAC3E,YAAM,IAAIN,qBAAJ,CAA0B,0BAA1B,CAAN;AACH;;AAED,QAAIK,WAAW,KAAKH,WAAW,CAACQ,MAA5B,IAAsCJ,IAAtC,IAA8C,EAAEA,IAAI,YAAYK,WAAlB,CAAlD,EAAkF;AAC9E,YAAM,IAAIX,qBAAJ,CAA0B,6BAA1B,CAAN;AACH;;AAED,SAAKY,eAAL,GAAuBP,WAAvB;AACA,SAAKQ,QAAL,GAAgBP,IAAhB;AACA,SAAKQ,WAAL,GAAmBP,OAAO,GAAGA,OAAH,GAAa,EAAvC;AACA,SAAKQ,MAAL,GAAcP,EAAE,GAAGA,EAAH,GAAQP,gBAAgB,EAAxC;;AACA,YAAQ,KAAKI,WAAb;AACI,WAAKH,WAAW,CAACQ,MAAjB;AACI,aAAKM,QAAL,GAAgB,KAAKC,UAAL,KAAoB,IAApB,GAA2B,KAAKA,UAAL,CAAgBC,UAA3C,GAAwD,CAAxE;AACA;;AACJ,WAAKhB,WAAW,CAACO,IAAjB;AACI,aAAKO,QAAL,GAAgB,KAAKG,QAAL,CAAcC,MAA9B;AALR;AAOH;;AAEqB,MAAXf,WAAW;AAClB,WAAO,KAAKO,eAAZ;AACH;;AAEiB,MAAPL,OAAO;AACd,WAAO,KAAKO,WAAZ;AACH;;AAEc,MAAJR,IAAI;AACX,WAAO,KAAKO,QAAZ;AACH;;AAEkB,MAARM,QAAQ;AACf,QAAI,KAAKP,eAAL,KAAyBV,WAAW,CAACQ,MAAzC,EAAiD;AAC7C,YAAM,IAAIV,qBAAJ,CAA0B,kCAA1B,CAAN;AACH;;AAED,WAAO,KAAKa,QAAZ;AACH;;AAEoB,MAAVI,UAAU;AACjB,QAAI,KAAKL,eAAL,KAAyBV,WAAW,CAACO,IAAzC,EAA+C;AAC3C,YAAM,IAAIT,qBAAJ,CAA0B,gCAA1B,CAAN;AACH;;AAED,WAAO,KAAKa,QAAZ;AACH;;AAEY,MAAFL,EAAE;AACT,WAAO,KAAKO,MAAZ;AACH;;AAlEyB","names":["InvalidOperationError","createNoDashGuid","MessageType","ConnectionMessage","constructor","messageType","body","headers","id","Text","Binary","ArrayBuffer","privMessageType","privBody","privHeaders","privId","privSize","binaryBody","byteLength","textBody","length"],"sources":["C:\\Users\\ozgur\\Documents\\VSCodeProjects\\webapp_educator\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common\\src\\common\\ConnectionMessage.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\nimport { IStringDictionary } from \"./IDictionary\";\r\n\r\nexport enum MessageType {\r\n    Text,\r\n    Binary,\r\n}\r\n\r\nexport class ConnectionMessage {\r\n\r\n    private privMessageType: MessageType;\r\n    private privHeaders: IStringDictionary<string>;\r\n    private privBody: any = null;\r\n    private privSize: number;\r\n\r\n    private privId: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privBody = body;\r\n        this.privHeaders = headers ? headers : {};\r\n        this.privId = id ? id : createNoDashGuid();\r\n        switch (this.messageType) {\r\n            case MessageType.Binary:\r\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\r\n                break;\r\n            case MessageType.Text:\r\n                this.privSize = this.textBody.length;\r\n        }\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n\r\n    public get body(): any {\r\n        return this.privBody;\r\n    }\r\n\r\n    public get textBody(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privBody as string;\r\n    }\r\n\r\n    public get binaryBody(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privBody;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}