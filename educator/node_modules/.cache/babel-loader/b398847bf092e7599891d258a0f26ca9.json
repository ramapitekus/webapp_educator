{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { Animated, I18nManager, StyleSheet } from 'react-native';\nimport { withTheme } from '../../core/theming';\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\n\nfunction AnimatedText(_ref) {\n  let {\n    style,\n    theme,\n    ...rest\n  } = _ref;\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n  return /*#__PURE__*/React.createElement(Animated.Text, _extends({}, rest, {\n    style: [styles.text, { ...theme.fonts.regular,\n      color: theme.colors.text,\n      writingDirection\n    }, style]\n  }));\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default withTheme(AnimatedText);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,QADF,EAGEC,WAHF,EAKEC,UALF,QAMO,cANP;AAOA,SAASC,SAAT,QAA0B,oBAA1B;AAUA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,OAAwD;AAAA,MAAlC;AAAEC,SAAF;AAASC,SAAT;AAAgB,OAAGC;AAAnB,GAAkC;AACtD,QAAMC,gBAAgB,GAAGP,WAAW,CAACQ,KAAZR,GAAoB,KAApBA,GAA4B,KAArD;AAEA,sBACEF,oBAACC,QAAD,CAAUU,IAAV,eACMH,IADN;AAEEF,SAAK,EAAE,CACLM,MAAM,CAACC,IADF,EAEL,EACE,GAAGN,KAAK,CAACO,KAANP,CAAYQ,OADjB;AAEEC,WAAK,EAAET,KAAK,CAACU,MAANV,CAAaM,IAFtB;AAGEJ;AAHF,KAFK,EAOLH,KAPK;AAFT,KADF;AAcD;;AAED,MAAMM,MAAM,GAAGT,UAAU,CAACe,MAAXf,CAAkB;AAC/BU,MAAI,EAAE;AACJM,aAAS,EAAE;AADP;AADyB,CAAlBhB,CAAf;AAMA,eAAeC,SAAS,CAACC,YAAD,CAAxB","names":["React","Animated","I18nManager","StyleSheet","withTheme","AnimatedText","style","theme","rest","writingDirection","isRTL","Text","styles","text","fonts","regular","color","colors","create","textAlign"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\Typography\\AnimatedText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  TextStyle,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof Animated.Text> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nfunction AnimatedText({ style, theme, ...rest }: Props) {\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Animated.Text\n      {...rest}\n      style={[\n        styles.text,\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n          writingDirection,\n        },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(AnimatedText);\n"]},"metadata":{},"sourceType":"module"}