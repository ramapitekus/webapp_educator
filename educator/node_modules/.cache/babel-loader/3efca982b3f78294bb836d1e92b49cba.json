{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olesr\\\\OneDrive\\\\Documents\\\\webapp_educ\\\\educator\\\\src\\\\components\\\\explanations\\\\player\\\\PlayerProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlayerContext = React.createContext({\n  play: playerId => true,\n  pause: playerId => true,\n  isPlaying: playerId => false\n});\n\nfunction PlayerProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // store the id of the current playing player\n  const [playing, setPlaying] = useState(''); // set playing to the given id\n\n  const play = playerId => setPlaying(playerId); // unset the playing player\n\n\n  const pause = () => setPlaying(false); // returns true if the given playerId is playing\n\n\n  const isPlaying = playerId => playerId === playing;\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      play,\n      pause,\n      isPlaying\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PlayerProvider, \"L0dNCOPakoKSgvRnhWq8KwyWePw=\");\n\n_c = PlayerProvider;\nexport default PlayerProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"sources":["C:/Users/olesr/OneDrive/Documents/webapp_educ/educator/src/components/explanations/player/PlayerProvider.jsx"],"names":["PlayerContext","React","createContext","play","playerId","pause","isPlaying","PlayerProvider","children","playing","setPlaying","useState"],"mappings":";;;;AAAA,OAAO,MAAMA,aAAa,GAAGC,KAAK,CAACC,aAAN,CAAoB;AAC7CC,EAAAA,IAAI,EAAGC,QAAD,IAAc,IADyB;AAE7CC,EAAAA,KAAK,EAAGD,QAAD,IAAc,IAFwB;AAG7CE,EAAAA,SAAS,EAAGF,QAAD,IAAc;AAHoB,CAApB,CAAtB;;AAML,SAASG,cAAT,OAAsC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACpC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC,CAFoC,CAIpC;;AACA,QAAMR,IAAI,GAAGC,QAAQ,IAAIM,UAAU,CAACN,QAAD,CAAnC,CALoC,CAOpC;;;AACA,QAAMC,KAAK,GAAG,MAAMK,UAAU,CAAC,KAAD,CAA9B,CARoC,CAUpC;;;AACA,QAAMJ,SAAS,GAAGF,QAAQ,IAAIA,QAAQ,KAAKK,OAA3C;;AAEA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEN,MAAAA,IAAF;AAAQE,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA/B;AAAA,cACGE;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlBQD,c;;KAAAA,c;AAoBT,eAAeA,cAAf","sourcesContent":["export const PlayerContext = React.createContext({\r\n    play: (playerId) => true,\r\n    pause: (playerId) => true,\r\n    isPlaying: (playerId) => false,\r\n  });\r\n  \r\n  function PlayerProvider({ children }) {\r\n    // store the id of the current playing player\r\n    const [playing, setPlaying] = useState('');\r\n  \r\n    // set playing to the given id\r\n    const play = playerId => setPlaying(playerId);\r\n  \r\n    // unset the playing player\r\n    const pause = () => setPlaying(false);\r\n  \r\n    // returns true if the given playerId is playing\r\n    const isPlaying = playerId => playerId === playing;\r\n  \r\n    return (\r\n      <PlayerContext.Provider value={{ play, pause, isPlaying }}>\r\n        {children}\r\n      </PlayerContext.Provider>\r\n    )\r\n  }\r\n  \r\n  export default PlayerProvider;"]},"metadata":{},"sourceType":"module"}