{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\n/**\r\n * Represents a keyword recognition model for recognizing when\r\n * the user says a keyword to initiate further speech recognition.\r\n * @class KeywordRecognitionModel\r\n */\n\nexport class KeywordRecognitionModel {\n  /**\r\n   * Create and initializes a new instance.\r\n   * @constructor\r\n   */\n  constructor() {\n    this.privDisposed = false;\n  }\n  /**\r\n   * Creates a keyword recognition model using the specified filename.\r\n   * @member KeywordRecognitionModel.fromFile\r\n   * @function\r\n   * @public\r\n   * @param {string} fileName - A string that represents file name for the keyword recognition model.\r\n   *        Note, the file can point to a zip file in which case the model\r\n   *        will be extracted from the zip.\r\n   * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n   */\n\n\n  static fromFile(fileName) {\n    Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n    throw new Error(\"Not yet implemented.\");\n  }\n  /**\r\n   * Creates a keyword recognition model using the specified filename.\r\n   * @member KeywordRecognitionModel.fromStream\r\n   * @function\r\n   * @public\r\n   * @param {string} file - A File that represents file for the keyword recognition model.\r\n   *        Note, the file can point to a zip file in which case the model will be extracted from the zip.\r\n   * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n   */\n\n\n  static fromStream(file) {\n    Contracts.throwIfNull(file, \"file\");\n    throw new Error(\"Not yet implemented.\");\n  }\n  /**\r\n   * Dispose of associated resources.\r\n   * @member KeywordRecognitionModel.prototype.close\r\n   * @function\r\n   * @public\r\n   */\n\n\n  close() {\n    if (this.privDisposed) {\n      return;\n    }\n\n    this.privDisposed = true;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,SAAT,QAA0B,aAA1B;AAEA;;;;;;AAKA,OAAM,MAAOC,uBAAP,CAA8B;AAGhC;;;;AAIAC;AANQ,wBAAwB,KAAxB;AAOP;AAED;;;;;;;;;;;;AAUsB,SAARC,QAAQ,CAACC,QAAD,EAAiB;AACnCJ,aAAS,CAACK,uBAAV,CAAkCD,QAAlC,EAA4C,UAA5C;AAEA,UAAM,IAAIE,KAAJ,CAAU,sBAAV,CAAN;AACH;AAED;;;;;;;;;;;AASwB,SAAVC,UAAU,CAACC,IAAD,EAAW;AAC/BR,aAAS,CAACS,WAAV,CAAsBD,IAAtB,EAA4B,MAA5B;AAEA,UAAM,IAAIF,KAAJ,CAAU,sBAAV,CAAN;AACH;AAED;;;;;;;;AAMOI,OAAK;AACR,QAAI,KAAKC,YAAT,EAAuB;AACnB;AACH;;AAED,SAAKA,YAAL,GAAoB,IAApB;AACH;;AArD+B","names":["Contracts","KeywordRecognitionModel","constructor","fromFile","fileName","throwIfFileDoesNotExist","Error","fromStream","file","throwIfNull","close","privDisposed"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ_2\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\sdk\\src\\sdk\\KeywordRecognitionModel.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Represents a keyword recognition model for recognizing when\r\n * the user says a keyword to initiate further speech recognition.\r\n * @class KeywordRecognitionModel\r\n */\r\nexport class KeywordRecognitionModel {\r\n    private privDisposed: boolean = false;\r\n\r\n    /**\r\n     * Create and initializes a new instance.\r\n     * @constructor\r\n     */\r\n    private constructor() {\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromFile\r\n     * @function\r\n     * @public\r\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\r\n     *        Note, the file can point to a zip file in which case the model\r\n     *        will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromFile(fileName: string): KeywordRecognitionModel {\r\n        Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromStream\r\n     * @function\r\n     * @public\r\n     * @param {string} file - A File that represents file for the keyword recognition model.\r\n     *        Note, the file can point to a zip file in which case the model will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromStream(file: File): KeywordRecognitionModel {\r\n        Contracts.throwIfNull(file, \"file\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member KeywordRecognitionModel.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}