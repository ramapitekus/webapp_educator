{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { MessageType } from \"./ConnectionMessage\";\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\nimport { createNoDashGuid } from \"./Guid\";\nexport class RawWebsocketMessage {\n  constructor(messageType, payload, id) {\n    this.privPayload = null;\n\n    if (!payload) {\n      throw new ArgumentNullError(\"payload\");\n    }\n\n    if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\n      throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\n    }\n\n    if (messageType === MessageType.Text && !(typeof payload === \"string\")) {\n      throw new InvalidOperationError(\"Payload must be a string\");\n    }\n\n    this.privMessageType = messageType;\n    this.privPayload = payload;\n    this.privId = id ? id : createNoDashGuid();\n  }\n\n  get messageType() {\n    return this.privMessageType;\n  }\n\n  get payload() {\n    return this.privPayload;\n  }\n\n  get textContent() {\n    if (this.privMessageType === MessageType.Binary) {\n      throw new InvalidOperationError(\"Not supported for binary message\");\n    }\n\n    return this.privPayload;\n  }\n\n  get binaryContent() {\n    if (this.privMessageType === MessageType.Text) {\n      throw new InvalidOperationError(\"Not supported for text message\");\n    }\n\n    return this.privPayload;\n  }\n\n  get id() {\n    return this.privId;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,SAAzD;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAEA,OAAM,MAAOC,mBAAP,CAA0B;AAK5BC,cAAmBC,WAAnB,EAA6CC,OAA7C,EAA2DC,EAA3D,EAAsE;AAH9D,uBAAmB,IAAnB;;AAIJ,QAAI,CAACD,OAAL,EAAc;AACV,YAAM,IAAIN,iBAAJ,CAAsB,SAAtB,CAAN;AACH;;AAED,QAAIK,WAAW,KAAKN,WAAW,CAACS,MAA5B,IAAsCF,OAAO,CAACG,SAAR,CAAkBL,WAAlB,CAA8BM,IAA9B,KAAuC,aAAjF,EAAgG;AAC5F,YAAM,IAAIT,qBAAJ,CAA0B,6BAA1B,CAAN;AACH;;AAED,QAAII,WAAW,KAAKN,WAAW,CAACY,IAA5B,IAAoC,EAAE,OAAQL,OAAR,KAAqB,QAAvB,CAAxC,EAA0E;AACtE,YAAM,IAAIL,qBAAJ,CAA0B,0BAA1B,CAAN;AACH;;AAED,SAAKW,eAAL,GAAuBP,WAAvB;AACA,SAAKQ,WAAL,GAAmBP,OAAnB;AACA,SAAKQ,MAAL,GAAcP,EAAE,GAAGA,EAAH,GAAQL,gBAAgB,EAAxC;AACH;;AAEqB,MAAXG,WAAW;AAClB,WAAO,KAAKO,eAAZ;AACH;;AAEiB,MAAPN,OAAO;AACd,WAAO,KAAKO,WAAZ;AACH;;AAEqB,MAAXE,WAAW;AAClB,QAAI,KAAKH,eAAL,KAAyBb,WAAW,CAACS,MAAzC,EAAiD;AAC7C,YAAM,IAAIP,qBAAJ,CAA0B,kCAA1B,CAAN;AACH;;AAED,WAAO,KAAKY,WAAZ;AACH;;AAEuB,MAAbG,aAAa;AACpB,QAAI,KAAKJ,eAAL,KAAyBb,WAAW,CAACY,IAAzC,EAA+C;AAC3C,YAAM,IAAIV,qBAAJ,CAA0B,gCAA1B,CAAN;AACH;;AAED,WAAO,KAAKY,WAAZ;AACH;;AAEY,MAAFN,EAAE;AACT,WAAO,KAAKO,MAAZ;AACH;;AAjD2B","names":["MessageType","ArgumentNullError","InvalidOperationError","createNoDashGuid","RawWebsocketMessage","constructor","messageType","payload","id","Binary","__proto__","name","Text","privMessageType","privPayload","privId","textContent","binaryContent"],"sources":["C:\\Users\\ozgur\\Documents\\VSCodeProjects\\webapp_educator\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common\\src\\common\\RawWebsocketMessage.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { MessageType } from \"./ConnectionMessage\";\r\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\r\nimport { createNoDashGuid } from \"./Guid\";\r\n\r\nexport class RawWebsocketMessage {\r\n    private privMessageType: MessageType;\r\n    private privPayload: any = null;\r\n    private privId: string;\r\n\r\n    public constructor(messageType: MessageType, payload: any, id?: string) {\r\n        if (!payload) {\r\n            throw new ArgumentNullError(\"payload\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privPayload = payload;\r\n        this.privId = id ? id : createNoDashGuid();\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get payload(): any {\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get textContent(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privPayload as string;\r\n    }\r\n\r\n    public get binaryContent(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}