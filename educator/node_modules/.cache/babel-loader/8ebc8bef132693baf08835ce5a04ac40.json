{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class CommandResponsePayload {\n  constructor(json) {\n    this.privCommandResponse = JSON.parse(json);\n  }\n\n  static fromJSON(json) {\n    return new CommandResponsePayload(json);\n  }\n\n  get type() {\n    return this.privCommandResponse.type;\n  }\n\n  get command() {\n    return this.privCommandResponse.command;\n  }\n\n  get id() {\n    return this.privCommandResponse.id;\n  }\n\n  get nickname() {\n    return this.privCommandResponse.nickname;\n  }\n\n  get participantId() {\n    return this.privCommandResponse.participantId;\n  }\n\n  get roomid() {\n    return this.privCommandResponse.roomid;\n  }\n\n  get value() {\n    return this.privCommandResponse.value;\n  }\n\n  get token() {\n    return this.privCommandResponse.token;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;AAgBA,OAAM,MAAOA,sBAAP,CAA6B;AAG/BC,cAAmBC,IAAnB,EAA+B;AAC3B,SAAKC,mBAAL,GAA2BC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAA3B;AACH;;AAEqB,SAARI,QAAQ,CAACJ,IAAD,EAAa;AAC/B,WAAO,IAAIF,sBAAJ,CAA2BE,IAA3B,CAAP;AACH;;AAEc,MAAJK,IAAI;AACX,WAAO,KAAKJ,mBAAL,CAAyBI,IAAhC;AACH;;AACiB,MAAPC,OAAO;AACd,WAAO,KAAKL,mBAAL,CAAyBK,OAAhC;AACH;;AACY,MAAFC,EAAE;AACT,WAAO,KAAKN,mBAAL,CAAyBM,EAAhC;AACH;;AACkB,MAARC,QAAQ;AACf,WAAO,KAAKP,mBAAL,CAAyBO,QAAhC;AACH;;AACuB,MAAbC,aAAa;AACpB,WAAO,KAAKR,mBAAL,CAAyBQ,aAAhC;AACH;;AACgB,MAANC,MAAM;AACb,WAAO,KAAKT,mBAAL,CAAyBS,MAAhC;AACH;;AACe,MAALC,KAAK;AACZ,WAAO,KAAKV,mBAAL,CAAyBU,KAAhC;AACH;;AACe,MAALC,KAAK;AACZ,WAAO,KAAKX,mBAAL,CAAyBW,KAAhC;AACH;;AAlC8B","names":["CommandResponsePayload","constructor","json","privCommandResponse","JSON","parse","fromJSON","type","command","id","nickname","participantId","roomid","value","token"],"sources":["C:\\Users\\ozgur\\Documents\\VSCodeProjects\\webapp_educator\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\common.speech\\Transcription\\ServiceMessages\\src\\common.speech\\Transcription\\ServiceMessages\\CommandResponsePayload.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming websocket commands\r\n */\r\nexport interface ICommandResponsePayload {\r\n    type: string;\r\n    command?: string;\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId?: string;\r\n    roomid?: string;\r\n    value: boolean | number | string;\r\n    token?: string;\r\n}\r\n\r\nexport class CommandResponsePayload implements ICommandResponsePayload {\r\n    private privCommandResponse: ICommandResponsePayload;\r\n\r\n    public constructor(json: string) {\r\n        this.privCommandResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): CommandResponsePayload {\r\n        return new CommandResponsePayload(json);\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privCommandResponse.type;\r\n    }\r\n    public get command(): string {\r\n        return this.privCommandResponse.command;\r\n    }\r\n    public get id(): string {\r\n        return this.privCommandResponse.id;\r\n    }\r\n    public get nickname(): string {\r\n        return this.privCommandResponse.nickname;\r\n    }\r\n    public get participantId(): string {\r\n        return this.privCommandResponse.participantId;\r\n    }\r\n    public get roomid(): string {\r\n        return this.privCommandResponse.roomid;\r\n    }\r\n    public get value(): boolean | number | string {\r\n        return this.privCommandResponse.value;\r\n    }\r\n    public get token(): string {\r\n        return this.privCommandResponse.token;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}