{"ast":null,"code":"import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport AnimatedText from '../../Typography/AnimatedText';\n\nconst LabelBackground = _ref => {\n  let {\n    parentState,\n    labelProps: {\n      placeholderStyle,\n      baseLabelTranslateX,\n      topPosition,\n      hasActiveOutline,\n      label,\n      backgroundColor,\n      roundness\n    },\n    labelStyle\n  } = _ref;\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n  const labelTranslationX = {\n    transform: [{\n      translateX: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-baseLabelTranslateX, 0]\n      })\n    }]\n  };\n  return label ? [/*#__PURE__*/React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity,\n      bottom: Math.max(roundness, 2)\n    }, labelTranslationX]\n  }), /*#__PURE__*/React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor,\n      opacity,\n      transform: [...labelStyle.transform, {\n        scaleY: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.2, 1]\n        })\n      }],\n      maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n    }],\n    numberOfLines: 1\n  }, label)] : null;\n};\n\nexport default LabelBackground;\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  }\n});","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;;AAIA,MAAMC,eAAe,GAAG,QAYI;AAAA,MAZH;AACvBC,eADuB;AAEvBC,cAAU,EAAE;AACVC,sBADU;AAEVC,yBAFU;AAGVC,iBAHU;AAIVC,sBAJU;AAKVC,WALU;AAMVC,qBANU;AAOVC;AAPU,KAFW;AAWvBC;AAXuB,GAYG;AAC1B,QAAMC,QAAQ,GAAGL,gBAAgB,IAAIL,WAAW,CAACW,KAAjD;AACA,QAAMC,OAAO,GAAGZ,WAAW,CAACa,OAAZb,CAAoBc,WAApBd,CAAgC;AAC9Ce,cAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkC;AAE9CC,eAAW,EAAE,CAACN,QAAQ,GAAG,CAAH,GAAO,CAAhB,EAAmB,CAAnB;AAFiC,GAAhCV,CAAhB;AAKA,QAAMiB,iBAAiB,GAAG;AACxBC,aAAS,EAAE,CACT;AACEC,gBAAU,EAAEnB,WAAW,CAACa,OAAZb,CAAoBc,WAApBd,CAAgC;AAC1Ce,kBAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD8B;AAE1CC,mBAAW,EAAE,CAAC,CAACb,mBAAF,EAAuB,CAAvB;AAF6B,OAAhCH;AADd,KADS;AADa,GAA1B;AAWA,SAAOM,KAAK,GACR,cACEX,oBAACC,QAAD,CAAUwB,IAAV;AACEC,OAAG,EAAC,sBADN;AAEEC,iBAAa,EAAC,MAFhB;AAGEC,SAAK,EAAE,CACL1B,UAAU,CAAC2B,YADN,EAELC,MAAM,CAACC,IAFF,EAGL;AACEnB,qBADF;AAEEoB,eAAS,EAAEC,IAAI,CAACC,GAALD,CAASpB,SAAS,GAAG,CAArBoB,EAAwB,CAAxBA,CAFb;AAGEhB,aAHF;AAIEkB,YAAM,EAAEF,IAAI,CAACC,GAALD,CAASpB,SAAToB,EAAoB,CAApBA;AAJV,KAHK,EASLX,iBATK;AAHT,IADF,eAgBEtB,oBAACG,YAAD;AACEuB,OAAG,EAAC,sBADN;AAEEE,SAAK,EAAE,CACLrB,gBADK,EAELO,UAFK,EAGLgB,MAAM,CAACM,aAHF,EAIL;AACEC,SAAG,EAAE5B,WAAW,GAAG,CADrB;AAEEG,qBAFF;AAGEK,aAHF;AAIEM,eAAS,EAAE,CACT,GAAGT,UAAU,CAACS,SADL,EAET;AACEe,cAAM,EAAEjC,WAAW,CAACa,OAAZb,CAAoBc,WAApBd,CAAgC;AACtCe,oBAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD0B;AAEtCC,qBAAW,EAAE,CAAC,GAAD,EAAM,CAAN;AAFyB,SAAhChB;AADV,OAFS,CAJb;AAaEkC,cAAQ,EACNlC,WAAW,CAACmC,WAAZnC,CAAwBoC,KAAxBpC,GACA,IAAIE,gBAAgB,CAACmC;AAfzB,KAJK,CAFT;AAwBEC,iBAAa,EAAE;AAxBjB,KA0BGhC,KA1BH,CAhBF,CADQ,GA8CR,IA9CJ;AA9BF;;AA+EA,eAAeP,eAAf;AAEA,MAAM0B,MAAM,GAAG5B,UAAU,CAAC0C,MAAX1C,CAAkB;AAC/B6B,MAAI,EAAE;AACJc,YAAQ,EAAE,UADN;AAEJR,OAAG,EAAE,CAFD;AAGJS,QAAI,EAAE,EAHF;AAIJL,SAAK,EAAE;AAJH,GADyB;AAO/BL,eAAa,EAAE;AACbS,YAAQ,EAAE,UADG;AAEbC,QAAI,EAAE,EAFO;AAGbJ,qBAAiB,EAAE,CAHN;AAIbK,SAAK,EAAE;AAJM;AAPgB,CAAlB7C,CAAf","names":["React","Animated","StyleSheet","AnimatedText","LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","roundness","labelStyle","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","labelTranslationX","transform","translateX","View","key","pointerEvents","style","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","top","scaleY","maxWidth","labelLayout","width","paddingHorizontal","numberOfLines","create","position","left","color"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\TextInput\\Label\\LabelBackground.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness,\n  },\n  labelStyle,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const labelTranslationX = {\n    transform: [\n      {\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-baseLabelTranslateX, 0],\n        }),\n      },\n    ],\n  };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              maxHeight: Math.max(roundness / 3, 2),\n              opacity,\n              bottom: Math.max(roundness, 2),\n            },\n            labelTranslationX,\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: [\n                ...labelStyle.transform,\n                {\n                  scaleY: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.2, 1],\n                  }),\n                },\n              ],\n              maxWidth:\n                parentState.labelLayout.width -\n                2 * placeholderStyle.paddingHorizontal,\n            },\n          ]}\n          numberOfLines={1}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}