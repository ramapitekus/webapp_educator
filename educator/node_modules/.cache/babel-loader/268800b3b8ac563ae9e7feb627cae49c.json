{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olesr\\\\OneDrive\\\\Documents\\\\webapp_educ_2\\\\educator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useMemo, useState, useEffect, useRef } from \"react\";\nimport ExplanationButtons from \"./components/ExplanationButtons\";\nimport sttFromMic from \"./components/S2t\";\nimport PlayAudio from \"./components/explanations/PlayAudio\";\nimport PlayVideo from \"./components/explanations/PlayVideo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const initialLeftOffset = 10;\n  const initialTopOffset = 40;\n  const [recording, setRecording] = useState(false);\n  const [commandDuringVideo, setCommandDuringVideo] = useState(null);\n  const [apiResponse, setapiResponse] = useState({\n    topic: null\n  });\n  const [explanations, setExplanations] = useState([]);\n  const [instantExplanation, setInstantExplanation] = useState(null); // const isPlaying = useRef(false);\n\n  const commandDuringPlay = useRef(\"idle\");\n  const latestButton = useRef(null);\n  const explRef = useRef(explanations);\n  const leftOffsetBtnRef = useRef(initialLeftOffset);\n  const topOffsetBtnRef = useRef(initialTopOffset);\n\n  const getResponse = apiData => {\n    // If utterance not recognized, ignore\n    console.log(apiData);\n\n    if (apiData.command) {\n      setCommandDuringVideo(apiData.command);\n    }\n\n    if (apiData.topic !== \"none\") {\n      if (apiData.playInstantly === \"true\") {\n        var obj = {\n          name: apiData.topic,\n          url: apiData.url,\n          mediaType: apiData.mediaType\n        };\n        setInstantExplanation(obj);\n      } else {\n        setapiResponse(apiData);\n      }\n    }\n  };\n\n  const removeExplanation = () => {\n    instantExplanation.mediaType = null;\n    commandDuringPlay.current = \"idle\";\n  };\n\n  const setColorProp = explanations => {\n    // TODO: Remove hacky copying\n    var copyExplanations = JSON.parse(JSON.stringify(explanations));\n    copyExplanations.forEach(explanation => {\n      if (explanation.name === apiResponse.topic) {\n        explanation.colored = true;\n      }\n    });\n    setExplanations(copyExplanations);\n  };\n\n  const unsetColorProp = button => {\n    // TODO: Remove hacky copying\n    var copyExplanations = JSON.parse(JSON.stringify(explRef.current));\n    copyExplanations.forEach(explanation => {\n      if (explanation.name === button && explanation.colored === true) {\n        explanation.colored = false;\n        setExplanations(copyExplanations);\n      }\n    });\n  };\n\n  const existsInArr = updatedExplanations => {\n    return updatedExplanations.find(expl => {\n      return expl.name === apiResponse.topic;\n    });\n  };\n\n  const removeOldestButton = intermediateExplanations => {\n    return intermediateExplanations.filter(expl => explanations[0].name !== expl.name);\n  };\n\n  const setNextButtonLocation = () => {\n    if (topOffsetBtnRef.current > initialTopOffset) {\n      topOffsetBtnRef.current -= 15;\n    } else {\n      topOffsetBtnRef.current += 15;\n    }\n\n    leftOffsetBtnRef.current += 15;\n  };\n\n  useEffect(() => {\n    explRef.current = explanations;\n  }, [explanations]);\n  useEffect(() => {\n    let intermediateExplanations = explanations; // Block which handles if button does not exist yet\n\n    if (apiResponse.topic) {\n      latestButton.current = apiResponse.topic;\n\n      if (!existsInArr(intermediateExplanations)) {\n        // If more than 5 buttons present, remove oldest one\n        if (intermediateExplanations.length >= 5) {\n          intermediateExplanations = removeOldestButton(intermediateExplanations);\n        } else {\n          setNextButtonLocation();\n          setExplanations([...intermediateExplanations, {\n            name: apiResponse.topic,\n            colored: true,\n            url: apiResponse.url,\n            topOffset: topOffsetBtnRef.current,\n            leftOffset: leftOffsetBtnRef.current\n          }]);\n        }\n      }\n\n      if (existsInArr(intermediateExplanations)) {\n        setColorProp(intermediateExplanations); //}\n      } // Change color property of button if already exists\n\n    }\n  }, //// eslint-disable-next-line react-hooks/exhaustive-deps\n  [apiResponse]); // 10s after mentioning the topic, return the color back to gray\n\n  useEffect(() => {\n    const button = latestButton.current; // assign the button associated with this instance of useEffect\n\n    setTimeout(() => {\n      unsetColorProp(button);\n    }, 10000);\n  }, [explanations]);\n  let [startRec, stopRec] = useMemo(() => {\n    return sttFromMic(getResponse, commandDuringPlay);\n  }, []);\n  useEffect(() => {\n    // if (recording){startRec()} maybe use?\n    recording ? startRec() : stopRec();\n\n    if (instantExplanation) {\n      setInstantExplanation(null);\n    }\n  }, [recording]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: recording ? \"button buttonStop\" : \"button buttonStart\",\n      onClick: () => {\n        setRecording(!recording);\n        setInstantExplanation(null);\n      },\n      children: recording ? \"Educator stoppen\" : \"Educator starten\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), instantExplanation && instantExplanation.mediaType === \"audio\" && /*#__PURE__*/_jsxDEV(PlayAudio, {\n      url: instantExplanation.url,\n      callback: removeExplanation,\n      commandDuringPlay: commandDuringPlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), instantExplanation && instantExplanation.mediaType === \"video\" && /*#__PURE__*/_jsxDEV(PlayVideo, {\n      videostr: instantExplanation.url,\n      btnName: instantExplanation.name,\n      callback: removeExplanation,\n      command: commandDuringVideo,\n      commandDuringPlay: commandDuringPlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), recording && /*#__PURE__*/_jsxDEV(ExplanationButtons, {\n      topics: explanations,\n      commandDuringPlay: commandDuringPlay,\n      command: commandDuringVideo,\n      setCommandDuringVideo: setCommandDuringVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"LXc0xvw/+7PQ8VGHydyxqxmzU4I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/olesr/OneDrive/Documents/webapp_educ_2/educator/src/App.js"],"names":["useMemo","useState","useEffect","useRef","ExplanationButtons","sttFromMic","PlayAudio","PlayVideo","App","initialLeftOffset","initialTopOffset","recording","setRecording","commandDuringVideo","setCommandDuringVideo","apiResponse","setapiResponse","topic","explanations","setExplanations","instantExplanation","setInstantExplanation","commandDuringPlay","latestButton","explRef","leftOffsetBtnRef","topOffsetBtnRef","getResponse","apiData","console","log","command","playInstantly","obj","name","url","mediaType","removeExplanation","current","setColorProp","copyExplanations","JSON","parse","stringify","forEach","explanation","colored","unsetColorProp","button","existsInArr","updatedExplanations","find","expl","removeOldestButton","intermediateExplanations","filter","setNextButtonLocation","length","topOffset","leftOffset","setTimeout","startRec","stopRec"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useMemo, useState, useEffect, useRef } from \"react\";\r\nimport ExplanationButtons from \"./components/ExplanationButtons\";\r\nimport sttFromMic from \"./components/S2t\";\r\nimport PlayAudio from \"./components/explanations/PlayAudio\";\r\nimport PlayVideo from \"./components/explanations/PlayVideo\";\r\n\r\nfunction App() {\r\n  const initialLeftOffset = 10;\r\n  const initialTopOffset = 40;\r\n  const [recording, setRecording] = useState(false);\r\n  const [commandDuringVideo, setCommandDuringVideo] = useState(null);\r\n  const [apiResponse, setapiResponse] = useState({ topic: null });\r\n  const [explanations, setExplanations] = useState([]);\r\n  const [instantExplanation, setInstantExplanation] = useState(null);\r\n  // const isPlaying = useRef(false);\r\n  const commandDuringPlay = useRef(\"idle\");\r\n  const latestButton = useRef(null);\r\n  const explRef = useRef(explanations);\r\n  const leftOffsetBtnRef = useRef(initialLeftOffset);\r\n  const topOffsetBtnRef = useRef(initialTopOffset);\r\n\r\n  const getResponse = (apiData) => {\r\n    // If utterance not recognized, ignore\r\n    console.log(apiData);\r\n    if (apiData.command) {\r\n      setCommandDuringVideo(apiData.command)\r\n    }\r\n    if (apiData.topic !== \"none\") {\r\n      if (apiData.playInstantly === \"true\") {\r\n        var obj = {name: apiData.topic,\r\n          url: apiData.url,\r\n          mediaType: apiData.mediaType\r\n          }\r\n        setInstantExplanation(obj);\r\n      } else {\r\n      setapiResponse(apiData);\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeExplanation = () => {\r\n    instantExplanation.mediaType = null;\r\n    commandDuringPlay.current = \"idle\";\r\n  };\r\n\r\n  const setColorProp = (explanations) => {\r\n    // TODO: Remove hacky copying\r\n    var copyExplanations = JSON.parse(JSON.stringify(explanations));\r\n    copyExplanations.forEach((explanation) => {\r\n      if (explanation.name === apiResponse.topic) {\r\n        explanation.colored = true;\r\n      }\r\n    });\r\n    setExplanations(copyExplanations);\r\n  };\r\n\r\n  const unsetColorProp = (button) => {\r\n    // TODO: Remove hacky copying\r\n    var copyExplanations = JSON.parse(JSON.stringify(explRef.current));\r\n    copyExplanations.forEach((explanation) => {\r\n      if (explanation.name === button && explanation.colored === true) {\r\n        explanation.colored = false;\r\n        setExplanations(copyExplanations);\r\n      }\r\n    });\r\n  };\r\n\r\n  const existsInArr = (updatedExplanations) => {\r\n    return updatedExplanations.find((expl) => {\r\n      return expl.name === apiResponse.topic;\r\n    });\r\n  };\r\n\r\n  const removeOldestButton = (intermediateExplanations) => {\r\n    return intermediateExplanations.filter(\r\n      (expl) => explanations[0].name !== expl.name\r\n    );\r\n  };\r\n\r\n  const setNextButtonLocation = () => {\r\n    if (topOffsetBtnRef.current > initialTopOffset) {\r\n      topOffsetBtnRef.current -= 15;\r\n    } else {\r\n      topOffsetBtnRef.current += 15;\r\n    }\r\n    leftOffsetBtnRef.current += 15;\r\n  };\r\n\r\n  useEffect(() => {\r\n    explRef.current = explanations;\r\n  }, [explanations]);\r\n\r\n  useEffect(\r\n    () => {\r\n      let intermediateExplanations = explanations;\r\n\r\n      // Block which handles if button does not exist yet\r\n      if (apiResponse.topic) {\r\n          latestButton.current = apiResponse.topic;\r\n          if (!existsInArr(intermediateExplanations)) {\r\n            // If more than 5 buttons present, remove oldest one\r\n            if (intermediateExplanations.length >= 5) {\r\n              intermediateExplanations = removeOldestButton(\r\n                intermediateExplanations\r\n              );\r\n            } else {\r\n              setNextButtonLocation();\r\n              setExplanations([\r\n                ...intermediateExplanations,\r\n                {\r\n                  name: apiResponse.topic,\r\n                  colored: true,\r\n                  url: apiResponse.url,\r\n                  topOffset: topOffsetBtnRef.current,\r\n                  leftOffset: leftOffsetBtnRef.current,\r\n                },\r\n              ]);\r\n            }\r\n          }\r\n          if (existsInArr(intermediateExplanations)) {\r\n            setColorProp(intermediateExplanations);\r\n          //}\r\n        }\r\n        // Change color property of button if already exists\r\n      }\r\n    },\r\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [apiResponse]\r\n  );\r\n\r\n  // 10s after mentioning the topic, return the color back to gray\r\n  useEffect(() => {\r\n    const button = latestButton.current; // assign the button associated with this instance of useEffect\r\n    setTimeout(() => {\r\n      unsetColorProp(button);\r\n    }, 10000);\r\n  }, [explanations]);\r\n\r\n  let [startRec, stopRec] = useMemo(() => {\r\n    return sttFromMic(getResponse, commandDuringPlay);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // if (recording){startRec()} maybe use?\r\n    recording ? startRec() : stopRec();\r\n    if (instantExplanation) {\r\n      setInstantExplanation(null);\r\n    }\r\n  }, [recording]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={recording ? \"button buttonStop\" : \"button buttonStart\"}\r\n        onClick={() => {\r\n          setRecording(!recording);\r\n          setInstantExplanation(null);\r\n        }}\r\n      >\r\n        {recording ? \"Educator stoppen\" : \"Educator starten\"}\r\n      </button>\r\n      {instantExplanation && instantExplanation.mediaType === \"audio\" && (\r\n        <PlayAudio\r\n          url={instantExplanation.url}\r\n          callback={removeExplanation}\r\n          commandDuringPlay={commandDuringPlay}\r\n        />\r\n      )}\r\n      {instantExplanation && instantExplanation.mediaType === \"video\" && (\r\n        <PlayVideo\r\n          videostr={instantExplanation.url}\r\n          btnName={instantExplanation.name}\r\n          callback={removeExplanation}\r\n          command={commandDuringVideo}\r\n          commandDuringPlay={commandDuringPlay}\r\n        />\r\n      )}\r\n\r\n      {recording && (\r\n        <ExplanationButtons topics={explanations} commandDuringPlay={commandDuringPlay} command={commandDuringVideo} setCommandDuringVideo={setCommandDuringVideo} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}