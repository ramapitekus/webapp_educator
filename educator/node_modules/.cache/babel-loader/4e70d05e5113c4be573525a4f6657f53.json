{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\nexport class PhraseListGrammar {\n  constructor(recogBase) {\n    this.privGrammerBuilder = recogBase.dynamicGrammar;\n  }\n  /**\r\n   * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n   * @param recognizer The recognizer to add phrase lists to.\r\n   */\n\n\n  static fromRecognizer(recognizer) {\n    const recoBase = recognizer.internalData;\n    return new PhraseListGrammar(recoBase);\n  }\n  /**\r\n   * Adds a single phrase to the current recognizer.\r\n   * @param phrase Phrase to add.\r\n   */\n\n\n  addPhrase(phrase) {\n    this.privGrammerBuilder.addPhrase(phrase);\n  }\n  /**\r\n   * Adds multiple phrases to the current recognizer.\r\n   * @param phrases Array of phrases to add.\r\n   */\n\n\n  addPhrases(phrases) {\n    this.privGrammerBuilder.addPhrase(phrases);\n  }\n  /**\r\n   * Clears all phrases added to the current recognizer.\r\n   */\n\n\n  clear() {\n    this.privGrammerBuilder.clearPhrases();\n  }\n\n}","map":{"version":3,"mappings":"AAAA;AACA;;AAQA;;;;;;AAMA,OAAM,MAAOA,iBAAP,CAAwB;AAG1BC,cAAoBC,SAApB,EAAoD;AAChD,SAAKC,kBAAL,GAA0BD,SAAS,CAACE,cAApC;AACH;AAED;;;;;;AAI4B,SAAdC,cAAc,CAACC,UAAD,EAAuB;AAC/C,UAAMC,QAAQ,GAA0BD,UAAU,CAACE,YAAnD;AAEA,WAAO,IAAIR,iBAAJ,CAAsBO,QAAtB,CAAP;AACH;AAED;;;;;;AAIOE,WAAS,CAACC,MAAD,EAAe;AAC3B,SAAKP,kBAAL,CAAwBM,SAAxB,CAAkCC,MAAlC;AACH;AAED;;;;;;AAIOC,YAAU,CAACC,OAAD,EAAkB;AAC/B,SAAKT,kBAAL,CAAwBM,SAAxB,CAAkCG,OAAlC;AACH;AAED;;;;;AAGOC,OAAK;AACR,SAAKV,kBAAL,CAAwBW,YAAxB;AACH;;AAtCyB","names":["PhraseListGrammar","constructor","recogBase","privGrammerBuilder","dynamicGrammar","fromRecognizer","recognizer","recoBase","internalData","addPhrase","phrase","addPhrases","phrases","clear","clearPhrases"],"sources":["C:\\Users\\ozgur\\Documents\\VSCodeProjects\\webapp_educator\\educator\\node_modules\\microsoft-cognitiveservices-speech-sdk\\distrib\\es2015\\src\\sdk\\src\\sdk\\PhraseListGrammar.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    ServiceRecognizerBase,\r\n} from \"../common.speech/Exports\";\r\nimport { Recognizer } from \"./Exports\";\r\n\r\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\r\nexport class PhraseListGrammar {\r\n    private privGrammerBuilder: DynamicGrammarBuilder;\r\n\r\n    private constructor(recogBase: ServiceRecognizerBase) {\r\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n     * @param recognizer The recognizer to add phrase lists to.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer): PhraseListGrammar {\r\n        const recoBase: ServiceRecognizerBase = recognizer.internalData as ServiceRecognizerBase;\r\n\r\n        return new PhraseListGrammar(recoBase);\r\n    }\r\n\r\n    /**\r\n     * Adds a single phrase to the current recognizer.\r\n     * @param phrase Phrase to add.\r\n     */\r\n    public addPhrase(phrase: string): void {\r\n        this.privGrammerBuilder.addPhrase(phrase);\r\n    }\r\n\r\n    /**\r\n     * Adds multiple phrases to the current recognizer.\r\n     * @param phrases Array of phrases to add.\r\n     */\r\n    public addPhrases(phrases: string[]): void {\r\n        this.privGrammerBuilder.addPhrase(phrases);\r\n    }\r\n\r\n    /**\r\n     * Clears all phrases added to the current recognizer.\r\n     */\r\n    public clear(): void {\r\n        this.privGrammerBuilder.clearPhrases();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}