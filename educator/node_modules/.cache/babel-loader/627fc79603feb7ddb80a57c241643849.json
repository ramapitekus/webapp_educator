{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olesr\\\\OneDrive\\\\Documents\\\\webapp_educ\\\\educator\\\\src\\\\About.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  _s();\n\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [chunks, setChunks] = useState([]);\n  let playAudio = document.getElementById(\"adioPlay\");\n  var constraints = window.constraints = {\n    audio: true,\n    video: false\n  };\n  useEffect(() => {\n    if (mediaRecorder !== null) {\n      mediaRecorder.start();\n      console.log(\"successfull!!!!!!!!!!!!!!!!!!!!!!!!\");\n    }\n  }, [mediaRecorder]);\n\n  function rec() {\n    setChunks([]);\n    navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n      setMediaRecorder(new MediaRecorder(stream)); //if (mediaRecorder != null) {\n      //  mediaRecorder.ondataavailable = function (e) {\n      //    console.log(e.data);\n      //    setChunks([...chunks, e.data]);\n      //  };\n      //}\n    });\n  }\n\n  function sleep(milliseconds) {\n    const date = Date.now();\n    let currentDate = null;\n\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n  const addChunk = chunk => setChunks([...chunks, chunk]);\n\n  function stop() {\n    try {\n      mediaRecorder.stop();\n      console.log(\"stopped\");\n\n      mediaRecorder.ondataavailable = function (e) {\n        addChunk(e.data);\n        console.log(chunks);\n      };\n\n      mediaRecorder.onstop = function (e) {\n        console.log(\"Recording stopped\"); //console.log(chunks);\n\n        let audioData = new Blob(chunks, {\n          type: \"audio/mp3;\"\n        });\n        let audioUrl = window.URL.createObjectURL(audioData);\n        playAudio.src = audioUrl; //const audio = new Audio(audioUrl);\n        //audio\n        //  .play()\n        //  .then(function () {})\n        //  .catch(function (error) {\n        //    console.log(error);\n        //  });\n      };\n    } catch (e) {\n      console.log(\"Recording probably not started\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"About Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"record\",\n      onClick: () => rec(),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"stop\",\n      onClick: () => stop(),\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"adioPlay\",\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(About, \"op3qtA4516DUIGUulcwPvRRgfh0=\");\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["C:/Users/olesr/OneDrive/Documents/webapp_educ/educator/src/About.js"],"names":["useEffect","useState","About","mediaRecorder","setMediaRecorder","chunks","setChunks","playAudio","document","getElementById","constraints","window","audio","video","start","console","log","rec","navigator","mediaDevices","getUserMedia","then","stream","MediaRecorder","sleep","milliseconds","date","Date","now","currentDate","addChunk","chunk","stop","ondataavailable","e","data","onstop","audioData","Blob","type","audioUrl","URL","createObjectURL","src"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst About = () => {\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [chunks, setChunks] = useState([]);\r\n\r\n  let playAudio = document.getElementById(\"adioPlay\");\r\n\r\n  var constraints = (window.constraints = {\r\n    audio: true,\r\n    video: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (mediaRecorder !== null) {\r\n      mediaRecorder.start();\r\n      console.log(\"successfull!!!!!!!!!!!!!!!!!!!!!!!!\");\r\n    }\r\n  }, [mediaRecorder]);\r\n\r\n  function rec() {\r\n    setChunks([]);\r\n    navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\r\n      setMediaRecorder(new MediaRecorder(stream));\r\n      //if (mediaRecorder != null) {\r\n      //  mediaRecorder.ondataavailable = function (e) {\r\n      //    console.log(e.data);\r\n      //    setChunks([...chunks, e.data]);\r\n      //  };\r\n      //}\r\n    });\r\n  }\r\n\r\n  function sleep(milliseconds) {\r\n    const date = Date.now();\r\n    let currentDate = null;\r\n    do {\r\n      currentDate = Date.now();\r\n    } while (currentDate - date < milliseconds);\r\n  }\r\n\r\n  const addChunk = (chunk) => setChunks([...chunks, chunk]);\r\n\r\n  function stop() {\r\n    try {\r\n      mediaRecorder.stop();\r\n      console.log(\"stopped\");\r\n      mediaRecorder.ondataavailable = function (e) {\r\n        addChunk(e.data);\r\n        console.log(chunks);\r\n      };\r\n      mediaRecorder.onstop = function (e) {\r\n        console.log(\"Recording stopped\");\r\n        //console.log(chunks);\r\n        let audioData = new Blob(chunks, { type: \"audio/mp3;\" });\r\n        let audioUrl = window.URL.createObjectURL(audioData);\r\n        playAudio.src = audioUrl;\r\n        //const audio = new Audio(audioUrl);\r\n        //audio\r\n        //  .play()\r\n        //  .then(function () {})\r\n        //  .catch(function (error) {\r\n        //    console.log(error);\r\n        //  });\r\n      };\r\n    } catch (e) {\r\n      console.log(\"Recording probably not started\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>About Page</h1>\r\n      <button className=\"record\" onClick={() => rec()}>\r\n        Start\r\n      </button>\r\n      <button className=\"stop\" onClick={() => stop()}>\r\n        Stop\r\n      </button>\r\n      <audio id=\"adioPlay\" controls></audio>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"]},"metadata":{},"sourceType":"module"}