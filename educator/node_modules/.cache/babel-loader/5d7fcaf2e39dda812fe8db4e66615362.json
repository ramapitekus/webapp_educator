{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olesr\\\\OneDrive\\\\Documents\\\\webapp_educ\\\\educator\\\\src\\\\About.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  _s();\n\n  const [mediaRecorder, setMediaRecorder] = useState(null); //var audio = document.querySelector(\"audio\");\n\n  var constraints = window.constraints = {\n    audio: true,\n    video: false\n  };\n\n  function rec() {\n    navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n      setMediaRecorder(new MediaRecorder(stream));\n      console.log(mediaRecorder);\n\n      if (mediaRecorder) {\n        mediaRecorder.start();\n      } //mediaRecorder.start();\n\n\n      let chunks = []; // mediaRecorder.onstop = function (e) {\n      //   console.log(\"data available!!!!!!\");\n      // };\n      //mediaRecorder.ondataavailable = function (e) {\n      //  chunks.push(e.data);\n      //};\n\n      console.log(chunks);\n    });\n  } //function stop() {\n  //  try {\n  //    mediaRecorder.stop();\n  //  } catch (e) {\n  //    console.log(\"Recording not started\");\n  //  }\n  //}\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"About Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"record\",\n      onClick: () => rec(),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(About, \"8C+C5JVbEhzeT/J4U2lXzwwQllw=\");\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["C:/Users/olesr/OneDrive/Documents/webapp_educ/educator/src/About.js"],"names":["useState","About","mediaRecorder","setMediaRecorder","constraints","window","audio","video","rec","navigator","mediaDevices","getUserMedia","then","stream","MediaRecorder","console","log","start","chunks"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,QAAQ,CAAC,IAAD,CAAlD,CADkB,CAGlB;;AACA,MAAII,WAAW,GAAIC,MAAM,CAACD,WAAP,GAAqB;AACtCE,IAAAA,KAAK,EAAE,IAD+B;AAEtCC,IAAAA,KAAK,EAAE;AAF+B,GAAxC;;AAKA,WAASC,GAAT,GAAe;AACbC,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCP,WAApC,EAAiDQ,IAAjD,CAAsD,UAAUC,MAAV,EAAkB;AACtEV,MAAAA,gBAAgB,CAAC,IAAIW,aAAJ,CAAkBD,MAAlB,CAAD,CAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;;AACA,UAAIA,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACe,KAAd;AACD,OALqE,CAMtE;;;AACA,UAAIC,MAAM,GAAG,EAAb,CAPsE,CAStE;AACA;AACA;AAEA;AACA;AACA;;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACD,KAjBD;AAkBD,GA5BiB,CA8BlB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,MAAMV,GAAG,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD,CA9CD;;GAAMP,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst About = () => {\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n\r\n  //var audio = document.querySelector(\"audio\");\r\n  var constraints = (window.constraints = {\r\n    audio: true,\r\n    video: false,\r\n  });\r\n\r\n  function rec() {\r\n    navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\r\n      setMediaRecorder(new MediaRecorder(stream));\r\n      console.log(mediaRecorder);\r\n      if (mediaRecorder) {\r\n        mediaRecorder.start();\r\n      }\r\n      //mediaRecorder.start();\r\n      let chunks = [];\r\n\r\n      // mediaRecorder.onstop = function (e) {\r\n      //   console.log(\"data available!!!!!!\");\r\n      // };\r\n\r\n      //mediaRecorder.ondataavailable = function (e) {\r\n      //  chunks.push(e.data);\r\n      //};\r\n      console.log(chunks);\r\n    });\r\n  }\r\n\r\n  //function stop() {\r\n  //  try {\r\n  //    mediaRecorder.stop();\r\n  //  } catch (e) {\r\n  //    console.log(\"Recording not started\");\r\n  //  }\r\n  //}\r\n\r\n  return (\r\n    <>\r\n      <h1>About Page</h1>\r\n      <button className=\"record\" onClick={() => rec()}>\r\n        Start\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"]},"metadata":{},"sourceType":"module"}