{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { StyleSheet, View, I18nManager } from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme, useTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Button from '../Button';\n\nconst PaginationControls = _ref => {\n  let {\n    page,\n    numberOfPages,\n    onPageChange,\n    showFastPaginationControls\n  } = _ref;\n  const {\n    colors\n  } = useTheme();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showFastPaginationControls ? /*#__PURE__*/React.createElement(IconButton, {\n    icon: _ref2 => {\n      let {\n        size,\n        color\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"page-first\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: colors.text,\n    disabled: page === 0,\n    onPress: () => onPageChange(0),\n    accessibilityLabel: \"page-first\"\n  }) : null, /*#__PURE__*/React.createElement(IconButton, {\n    icon: _ref3 => {\n      let {\n        size,\n        color\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: colors.text,\n    disabled: page === 0,\n    onPress: () => onPageChange(page - 1),\n    accessibilityLabel: \"chevron-left\"\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    icon: _ref4 => {\n      let {\n        size,\n        color\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: colors.text,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: () => onPageChange(page + 1),\n    accessibilityLabel: \"chevron-right\"\n  }), showFastPaginationControls ? /*#__PURE__*/React.createElement(IconButton, {\n    icon: _ref5 => {\n      let {\n        size,\n        color\n      } = _ref5;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"page-last\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: colors.text,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: () => onPageChange(numberOfPages - 1),\n    accessibilityLabel: \"page-last\"\n  }) : null);\n};\n\nconst PaginationDropdown = _ref6 => {\n  let {\n    numberOfItemsPerPageList,\n    numberOfItemsPerPage,\n    onItemsPerPageChange\n  } = _ref6;\n  const {\n    colors\n  } = useTheme();\n  const [showSelect, toggleSelect] = React.useState(false);\n  return /*#__PURE__*/React.createElement(Menu, {\n    visible: showSelect,\n    onDismiss: () => toggleSelect(!showSelect),\n    anchor: /*#__PURE__*/React.createElement(Button, {\n      mode: \"outlined\",\n      onPress: () => toggleSelect(true),\n      style: styles.button,\n      icon: \"menu-down\",\n      contentStyle: styles.contentStyle\n    }, `${numberOfItemsPerPage}`)\n  }, numberOfItemsPerPageList === null || numberOfItemsPerPageList === void 0 ? void 0 : numberOfItemsPerPageList.map(option => /*#__PURE__*/React.createElement(Menu.Item, {\n    key: option,\n    titleStyle: option === numberOfItemsPerPage && {\n      color: colors.primary\n    },\n    onPress: () => {\n      onItemsPerPageChange === null || onItemsPerPageChange === void 0 ? void 0 : onItemsPerPageChange(option);\n      toggleSelect(false);\n    },\n    title: option\n  })));\n};\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\n\nconst DataTablePagination = _ref7 => {\n  let {\n    label,\n    accessibilityLabel,\n    page,\n    numberOfPages,\n    onPageChange,\n    style,\n    theme,\n    showFastPaginationControls = false,\n    numberOfItemsPerPageList,\n    numberOfItemsPerPage,\n    onItemsPerPageChange,\n    selectPageDropdownLabel,\n    selectPageDropdownAccessibilityLabel,\n    ...rest\n  } = _ref7;\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    style: [styles.container, style],\n    accessibilityLabel: \"pagination-container\"\n  }), numberOfItemsPerPageList && numberOfItemsPerPage && onItemsPerPageChange && /*#__PURE__*/React.createElement(View, {\n    accessibilityLabel: \"Options Select\",\n    style: styles.optionsContainer\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: selectPageDropdownAccessibilityLabel || 'selectPageDropdownLabel'\n  }, selectPageDropdownLabel), /*#__PURE__*/React.createElement(PaginationDropdown, {\n    numberOfItemsPerPageList: numberOfItemsPerPageList,\n    numberOfItemsPerPage: numberOfItemsPerPage,\n    onItemsPerPageChange: onItemsPerPageChange\n  })), /*#__PURE__*/React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: accessibilityLabel || 'label'\n  }, label), /*#__PURE__*/React.createElement(View, {\n    style: styles.iconsContainer\n  }, /*#__PURE__*/React.createElement(PaginationControls, {\n    showFastPaginationControls: showFastPaginationControls,\n    onPageChange: onPageChange,\n    page: page,\n    numberOfPages: numberOfPages\n  })));\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap'\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16\n  },\n  iconsContainer: {\n    flexDirection: 'row'\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse'\n  }\n});\nexport default withTheme(DataTablePagination); // @component-docs ignore-next-line\n\nexport { DataTablePagination };","map":{"version":3,"mappings":"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","names":["React","StyleSheet","View","I18nManager","color","IconButton","Text","withTheme","useTheme","MaterialCommunityIcon","Menu","Button","PaginationControls","page","numberOfPages","onPageChange","showFastPaginationControls","colors","icon","size","name","direction","isRTL","text","disabled","onPress","accessibilityLabel","PaginationDropdown","numberOfItemsPerPageList","numberOfItemsPerPage","onItemsPerPageChange","showSelect","toggleSelect","useState","visible","onDismiss","anchor","mode","style","styles","button","contentStyle","map","option","Item","key","titleStyle","primary","title","DataTablePagination","label","theme","selectPageDropdownLabel","selectPageDropdownAccessibilityLabel","rest","labelColor","alpha","rgb","string","container","optionsContainer","numberOfLines","iconsContainer","displayName","create","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","fontSize","marginRight","textAlign"],"sources":["C:\\Users\\olesr\\OneDrive\\Documents\\webapp_educ\\educator\\node_modules\\react-native-paper\\lib\\module\\components\\DataTable\\DataTablePagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme, useTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Button from '../Button';\n\ntype Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme: ReactNativePaper.Theme;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n}: PaginationControlsProps) => {\n  const { colors } = useTheme();\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={colors.text}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={colors.text}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={colors.text}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n}: PaginationDropdownProps) => {\n  const { colors } = useTheme();\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          title={option}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  ...rest\n}: Props) => {\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}